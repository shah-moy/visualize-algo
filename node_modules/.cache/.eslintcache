[{"D:\\CSE499A\\al-khwarizmi\\src\\index.js":"1","D:\\CSE499A\\al-khwarizmi\\src\\App.js":"2","D:\\CSE499A\\al-khwarizmi\\src\\components\\Navbar\\index.js":"3","D:\\CSE499A\\al-khwarizmi\\src\\components\\Navbar\\NavbarElements.js":"4","D:\\CSE499A\\al-khwarizmi\\src\\components\\Sidebar\\index.js":"5","D:\\CSE499A\\al-khwarizmi\\src\\components\\Sidebar\\SidebarElements.js":"6","D:\\CSE499A\\al-khwarizmi\\src\\pages\\index.js":"7","D:\\CSE499A\\al-khwarizmi\\src\\components\\HeroSection\\index.js":"8","D:\\CSE499A\\al-khwarizmi\\src\\components\\HeroSection\\HeroElements.js":"9","D:\\CSE499A\\al-khwarizmi\\src\\components\\ButtonElements.js":"10","D:\\CSE499A\\al-khwarizmi\\src\\components\\InfoSection\\index.js":"11","D:\\CSE499A\\al-khwarizmi\\src\\components\\InfoSection\\InfoElements.js":"12","D:\\CSE499A\\al-khwarizmi\\src\\components\\InfoSection\\Data.js":"13","D:\\CSE499A\\al-khwarizmi\\src\\components\\ContactUs\\index.js":"14","D:\\CSE499A\\al-khwarizmi\\src\\components\\ContactUs\\ContactUsElements.js":"15","D:\\CSE499A\\al-khwarizmi\\src\\pages\\signin.js":"16","D:\\CSE499A\\al-khwarizmi\\src\\components\\Footer\\index.js":"17","D:\\CSE499A\\al-khwarizmi\\src\\components\\Footer\\FooterElements.js":"18","D:\\CSE499A\\al-khwarizmi\\src\\pages\\visualize.js":"19","D:\\CSE499A\\al-khwarizmi\\src\\components\\Signin\\index.js":"20","D:\\CSE499A\\al-khwarizmi\\src\\components\\Signin\\SigninElements.js":"21","D:\\CSE499A\\al-khwarizmi\\src\\components\\ScrollToTop.js":"22","D:\\CSE499A\\al-khwarizmi\\src\\components\\Khwarizmi\\index.js":"23","D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\BubbleSort.js":"24","D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\helpers.js":"25","D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\ShellSort.js":"26","D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\SelectionSort.js":"27","D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\MergeSort.js":"28","D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\InsertionSort.js":"29","D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\HeapSort.js":"30","D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\QuickSort3.js":"31","D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\QuickSort.js":"32","D:\\CSE499A\\al-khwarizmi\\src\\components\\middle\\TopBar\\index.js":"33","D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Controls\\index.js":"34","D:\\CSE499A\\al-khwarizmi\\src\\components\\floor\\SortVisualizer\\index.js":"35","D:\\CSE499A\\al-khwarizmi\\src\\components\\middle\\TopBar\\TopBarElements.js":"36","D:\\CSE499A\\al-khwarizmi\\src\\components\\middle\\VisualizerControls\\index.js":"37","D:\\CSE499A\\al-khwarizmi\\src\\components\\floor\\SortChart1\\index.js":"38","D:\\CSE499A\\al-khwarizmi\\src\\components\\floor\\SortChart\\index.js":"39","D:\\CSE499A\\al-khwarizmi\\src\\components\\floor\\SortChart2\\index.js":"40","D:\\CSE499A\\al-khwarizmi\\src\\components\\floor\\SortInput\\index.js":"41","D:\\CSE499A\\al-khwarizmi\\src\\components\\floor\\SortInfo\\index.js":"42","D:\\CSE499A\\al-khwarizmi\\src\\components\\floor\\SortInfoP\\index.js":"43","D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Drawer\\index.js":"44","D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Bar2\\index.js":"45","D:\\CSE499A\\al-khwarizmi\\src\\components\\middle\\ProgressBar\\index.js":"46","D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\ColorKey\\index.js":"47","D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Button\\index.js":"48","D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Menu\\index.js":"49","D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Button\\constants.js":"50","D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Bar\\index.js":"51","D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Bar1\\index.js":"52","D:\\CSE499A\\al-khwarizmi\\src\\components\\floor\\Sd\\sd.js":"53","D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Button1\\index.js":"54","D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Button1\\constants.js":"55","D:\\CSE499B\\visualize-algo\\src\\index.js":"56","D:\\CSE499B\\visualize-algo\\src\\App.js":"57","D:\\CSE499B\\visualize-algo\\src\\pages\\signin.js":"58","D:\\CSE499B\\visualize-algo\\src\\pages\\visualize.js":"59","D:\\CSE499B\\visualize-algo\\src\\pages\\index.js":"60","D:\\CSE499B\\visualize-algo\\src\\components\\ScrollToTop.js":"61","D:\\CSE499B\\visualize-algo\\src\\components\\Khwarizmi\\index.js":"62","D:\\CSE499B\\visualize-algo\\src\\components\\InfoSection\\Data.js":"63","D:\\CSE499B\\visualize-algo\\src\\components\\Signin\\index.js":"64","D:\\CSE499B\\visualize-algo\\src\\components\\HeroSection\\index.js":"65","D:\\CSE499B\\visualize-algo\\src\\components\\InfoSection\\index.js":"66","D:\\CSE499B\\visualize-algo\\src\\components\\Footer\\index.js":"67","D:\\CSE499B\\visualize-algo\\src\\components\\Sidebar\\index.js":"68","D:\\CSE499B\\visualize-algo\\src\\components\\Navbar\\index.js":"69","D:\\CSE499B\\visualize-algo\\src\\components\\ContactUs\\index.js":"70","D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\BubbleSort.js":"71","D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\SelectionSort.js":"72","D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\InsertionSort.js":"73","D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\HeapSort.js":"74","D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\MergeSort.js":"75","D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\QuickSort3.js":"76","D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\QuickSort.js":"77","D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\ShellSort.js":"78","D:\\CSE499B\\visualize-algo\\src\\components\\Signin\\SigninElements.js":"79","D:\\CSE499B\\visualize-algo\\src\\components\\ButtonElements.js":"80","D:\\CSE499B\\visualize-algo\\src\\components\\middle\\TopBar\\index.js":"81","D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Controls\\index.js":"82","D:\\CSE499B\\visualize-algo\\src\\components\\floor\\SortVisualizer\\index.js":"83","D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Drawer\\index.js":"84","D:\\CSE499B\\visualize-algo\\src\\components\\Footer\\FooterElements.js":"85","D:\\CSE499B\\visualize-algo\\src\\components\\HeroSection\\HeroElements.js":"86","D:\\CSE499B\\visualize-algo\\src\\components\\InfoSection\\InfoElements.js":"87","D:\\CSE499B\\visualize-algo\\src\\components\\Navbar\\NavbarElements.js":"88","D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\helpers.js":"89","D:\\CSE499B\\visualize-algo\\src\\components\\Sidebar\\SidebarElements.js":"90","D:\\CSE499B\\visualize-algo\\src\\components\\ContactUs\\ContactUsElements.js":"91","D:\\CSE499B\\visualize-algo\\src\\components\\middle\\TopBar\\TopBarElements.js":"92","D:\\CSE499B\\visualize-algo\\src\\components\\floor\\Sd\\sd.js":"93","D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Button\\index.js":"94","D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Button1\\index.js":"95","D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Menu\\index.js":"96","D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Bar2\\index.js":"97","D:\\CSE499B\\visualize-algo\\src\\components\\floor\\SortChart2\\index.js":"98","D:\\CSE499B\\visualize-algo\\src\\components\\floor\\SortChart1\\index.js":"99","D:\\CSE499B\\visualize-algo\\src\\components\\middle\\ProgressBar\\index.js":"100","D:\\CSE499B\\visualize-algo\\src\\components\\floor\\SortChart\\index.js":"101","D:\\CSE499B\\visualize-algo\\src\\components\\floor\\SortInfo\\index.js":"102","D:\\CSE499B\\visualize-algo\\src\\components\\middle\\VisualizerControls\\index.js":"103","D:\\CSE499B\\visualize-algo\\src\\components\\celling\\ColorKey\\index.js":"104","D:\\CSE499B\\visualize-algo\\src\\components\\floor\\SortInfoP\\index.js":"105","D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Button\\constants.js":"106","D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Button1\\constants.js":"107","D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Bar\\index.js":"108","D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Bar1\\index.js":"109"},{"size":197,"mtime":1628144238350,"results":"110","hashOfConfig":"111"},{"size":526,"mtime":1629481625459,"results":"112","hashOfConfig":"111"},{"size":2081,"mtime":1637074462462,"results":"113","hashOfConfig":"111"},{"size":2170,"mtime":1636976948580,"results":"114","hashOfConfig":"111"},{"size":1240,"mtime":1629481731893,"results":"115","hashOfConfig":"111"},{"size":1840,"mtime":1636976819906,"results":"116","hashOfConfig":"111"},{"size":937,"mtime":1629276689179,"results":"117","hashOfConfig":"111"},{"size":1103,"mtime":1629486314876,"results":"118","hashOfConfig":"111"},{"size":2593,"mtime":1636974806765,"results":"119","hashOfConfig":"111"},{"size":666,"mtime":1636975056481,"results":"120","hashOfConfig":"111"},{"size":1721,"mtime":1629478715398,"results":"121","hashOfConfig":"111"},{"size":1978,"mtime":1636976612659,"results":"122","hashOfConfig":"111"},{"size":1934,"mtime":1629479020221,"results":"123","hashOfConfig":"111"},{"size":1367,"mtime":1628350083109,"results":"124","hashOfConfig":"111"},{"size":1568,"mtime":1628348666897,"results":"125","hashOfConfig":"111"},{"size":285,"mtime":1629478327081,"results":"126","hashOfConfig":"111"},{"size":3408,"mtime":1629474258139,"results":"127","hashOfConfig":"111"},{"size":2077,"mtime":1629282028492,"results":"128","hashOfConfig":"111"},{"size":291,"mtime":1629537243447,"results":"129","hashOfConfig":"111"},{"size":1014,"mtime":1637074480380,"results":"130","hashOfConfig":"111"},{"size":1930,"mtime":1636974962983,"results":"131","hashOfConfig":"111"},{"size":251,"mtime":1629478426879,"results":"132","hashOfConfig":"111"},{"size":6416,"mtime":1637169702027,"results":"133","hashOfConfig":"111"},{"size":4110,"mtime":1637177776554,"results":"134","hashOfConfig":"111"},{"size":983,"mtime":1637123300937,"results":"135","hashOfConfig":"111"},{"size":3109,"mtime":1635947182363,"results":"136","hashOfConfig":"111"},{"size":4282,"mtime":1637118921674,"results":"137","hashOfConfig":"111"},{"size":5479,"mtime":1637120080352,"results":"138","hashOfConfig":"111"},{"size":4017,"mtime":1637108867580,"results":"139","hashOfConfig":"111"},{"size":5652,"mtime":1635947182016,"results":"140","hashOfConfig":"111"},{"size":4851,"mtime":1586636007000,"results":"141","hashOfConfig":"111"},{"size":6397,"mtime":1637107010821,"results":"142","hashOfConfig":"111"},{"size":871,"mtime":1637172911276,"results":"143","hashOfConfig":"111"},{"size":2180,"mtime":1637173435485,"results":"144","hashOfConfig":"111"},{"size":6580,"mtime":1637122935486,"results":"145","hashOfConfig":"111"},{"size":312,"mtime":1637181227283,"results":"146","hashOfConfig":"111"},{"size":2941,"mtime":1636796523031,"results":"147","hashOfConfig":"111"},{"size":1792,"mtime":1636796562945,"results":"148","hashOfConfig":"111"},{"size":5310,"mtime":1637122641937,"results":"149","hashOfConfig":"111"},{"size":1408,"mtime":1636796581267,"results":"150","hashOfConfig":"111"},{"size":1846,"mtime":1630949391779,"results":"151","hashOfConfig":"111"},{"size":1875,"mtime":1635945886909,"results":"152","hashOfConfig":"111"},{"size":4634,"mtime":1637122378444,"results":"153","hashOfConfig":"111"},{"size":382,"mtime":1636538052084,"results":"154","hashOfConfig":"111"},{"size":1266,"mtime":1630971409700,"results":"155","hashOfConfig":"111"},{"size":391,"mtime":1629533702458,"results":"156","hashOfConfig":"111"},{"size":1582,"mtime":1630950397331,"results":"157","hashOfConfig":"111"},{"size":1979,"mtime":1629531830219,"results":"158","hashOfConfig":"111"},{"size":2664,"mtime":1636796515955,"results":"159","hashOfConfig":"111"},{"size":278,"mtime":1629531740472,"results":"160","hashOfConfig":"111"},{"size":817,"mtime":1630730628998,"results":"161","hashOfConfig":"111"},{"size":1273,"mtime":1637304643689,"results":"162","hashOfConfig":"111"},{"size":394,"mtime":1630973577230,"results":"163","hashOfConfig":"111"},{"size":1984,"mtime":1637173398381,"results":"164","hashOfConfig":"111"},{"size":277,"mtime":1637173391913,"results":"165","hashOfConfig":"111"},{"size":197,"mtime":1628144238350,"results":"166","hashOfConfig":"167"},{"size":526,"mtime":1629481625459,"results":"168","hashOfConfig":"167"},{"size":285,"mtime":1629478327081,"results":"169","hashOfConfig":"167"},{"size":291,"mtime":1629537243447,"results":"170","hashOfConfig":"167"},{"size":937,"mtime":1629276689179,"results":"171","hashOfConfig":"167"},{"size":251,"mtime":1629478426879,"results":"172","hashOfConfig":"167"},{"size":6549,"mtime":1639299010039,"results":"173","hashOfConfig":"167"},{"size":1936,"mtime":1639307959078,"results":"174","hashOfConfig":"167"},{"size":1004,"mtime":1637846029315,"results":"175","hashOfConfig":"167"},{"size":1103,"mtime":1629486314876,"results":"176","hashOfConfig":"167"},{"size":1721,"mtime":1629478715398,"results":"177","hashOfConfig":"167"},{"size":3410,"mtime":1637845900965,"results":"178","hashOfConfig":"167"},{"size":1240,"mtime":1629481731893,"results":"179","hashOfConfig":"167"},{"size":2071,"mtime":1637846001408,"results":"180","hashOfConfig":"167"},{"size":1367,"mtime":1628350083109,"results":"181","hashOfConfig":"167"},{"size":4112,"mtime":1639307431302,"results":"182","hashOfConfig":"167"},{"size":4282,"mtime":1637118921674,"results":"183","hashOfConfig":"167"},{"size":4017,"mtime":1637108867580,"results":"184","hashOfConfig":"167"},{"size":5652,"mtime":1635947182016,"results":"185","hashOfConfig":"167"},{"size":5479,"mtime":1637120080352,"results":"186","hashOfConfig":"167"},{"size":4851,"mtime":1586636007000,"results":"187","hashOfConfig":"167"},{"size":6397,"mtime":1637107010821,"results":"188","hashOfConfig":"167"},{"size":3109,"mtime":1635947182363,"results":"189","hashOfConfig":"167"},{"size":1930,"mtime":1636974962983,"results":"190","hashOfConfig":"167"},{"size":666,"mtime":1636975056481,"results":"191","hashOfConfig":"167"},{"size":861,"mtime":1637846074318,"results":"192","hashOfConfig":"167"},{"size":1901,"mtime":1639306503352,"results":"193","hashOfConfig":"167"},{"size":6620,"mtime":1639294410755,"results":"194","hashOfConfig":"167"},{"size":382,"mtime":1636538052084,"results":"195","hashOfConfig":"167"},{"size":2077,"mtime":1629282028492,"results":"196","hashOfConfig":"167"},{"size":2593,"mtime":1636974806765,"results":"197","hashOfConfig":"167"},{"size":1978,"mtime":1636976612659,"results":"198","hashOfConfig":"167"},{"size":2176,"mtime":1639309009846,"results":"199","hashOfConfig":"167"},{"size":983,"mtime":1637123300937,"results":"200","hashOfConfig":"167"},{"size":1840,"mtime":1636976819906,"results":"201","hashOfConfig":"167"},{"size":1568,"mtime":1628348666897,"results":"202","hashOfConfig":"167"},{"size":318,"mtime":1639309143956,"results":"203","hashOfConfig":"167"},{"size":394,"mtime":1630973577230,"results":"204","hashOfConfig":"167"},{"size":1979,"mtime":1629531830219,"results":"205","hashOfConfig":"167"},{"size":1984,"mtime":1637173398381,"results":"206","hashOfConfig":"167"},{"size":2664,"mtime":1636796515955,"results":"207","hashOfConfig":"167"},{"size":1266,"mtime":1630971409700,"results":"208","hashOfConfig":"167"},{"size":1408,"mtime":1636796581267,"results":"209","hashOfConfig":"167"},{"size":1792,"mtime":1636796562945,"results":"210","hashOfConfig":"167"},{"size":391,"mtime":1629533702458,"results":"211","hashOfConfig":"167"},{"size":5310,"mtime":1637122641937,"results":"212","hashOfConfig":"167"},{"size":1796,"mtime":1639308183770,"results":"213","hashOfConfig":"167"},{"size":2941,"mtime":1636796523031,"results":"214","hashOfConfig":"167"},{"size":1582,"mtime":1630950397331,"results":"215","hashOfConfig":"167"},{"size":4634,"mtime":1637122378444,"results":"216","hashOfConfig":"167"},{"size":278,"mtime":1629531740472,"results":"217","hashOfConfig":"167"},{"size":277,"mtime":1637173391913,"results":"218","hashOfConfig":"167"},{"size":817,"mtime":1630730628998,"results":"219","hashOfConfig":"167"},{"size":1271,"mtime":1638922672967,"results":"220","hashOfConfig":"167"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},"1x18i19",{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"223"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"223"},{"filePath":"274","messages":"275","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"276","messages":"277","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"223"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"223"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"296","usedDeprecatedRules":"223"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"223"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"223"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"223"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"223"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"320","messages":"321","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"223"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"337"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"223"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"223"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},"ffyort",{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"347"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"400","messages":"401","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"402","usedDeprecatedRules":"347"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"347"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"340","usedDeprecatedRules":"347"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"322","usedDeprecatedRules":"347"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"347"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"347"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"437","messages":"438","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"347"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"445","messages":"446","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"347"},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"455","usedDeprecatedRules":"347"},"D:\\CSE499A\\al-khwarizmi\\src\\index.js",[],["456","457"],"D:\\CSE499A\\al-khwarizmi\\src\\App.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\Navbar\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\Navbar\\NavbarElements.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\Sidebar\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\Sidebar\\SidebarElements.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\pages\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\HeroSection\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\HeroSection\\HeroElements.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\ButtonElements.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\InfoSection\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\InfoSection\\InfoElements.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\InfoSection\\Data.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\ContactUs\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\ContactUs\\ContactUsElements.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\pages\\signin.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\Footer\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\Footer\\FooterElements.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\pages\\visualize.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\Signin\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\Signin\\SigninElements.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\ScrollToTop.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\Khwarizmi\\index.js",["458"],"import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\nimport Controls from '../celling/Controls';\r\nimport TopBar from '../middle/TopBar';\r\nimport Drawer from '../celling/Drawer';\r\nimport SortVisualizer from '../floor/SortVisualizer';\r\n\r\nimport BubbleSort, {\r\n  BubbleSortKey,\r\n  BubbleSortDesc,\r\n  BubbleSortP\r\n} from '../algorithms/BubbleSort';\r\nimport SelectionSort, {\r\n  SelectionSortKey,\r\n  SelectionSortDesc,\r\n  SelectionSortP\r\n} from '../algorithms/SelectionSort';\r\nimport InsertionSort, {\r\n  InsertionSortKey,\r\n  InsertionSortDesc,\r\n  InsertionSortP\r\n} from '../algorithms/InsertionSort';\r\nimport MergeSort, {\r\n  MergeSortKey,\r\n  MergeSortDesc,\r\n  MergeSortP\r\n} from '../algorithms/MergeSort';\r\nimport QuickSort, {\r\n  QuickSortKey,\r\n  QuickSortDesc,\r\n  QuickSortP\r\n} from '../algorithms/QuickSort';\r\nimport QuickSort3, {\r\n  QuickSort3Key,\r\n  QuickSort3Desc\r\n} from '../algorithms/QuickSort3';\r\nimport HeapSort, {\r\n  HeapSortKey,\r\n  HeapSortDesc,\r\n  HeapSortP\r\n} from '../algorithms/HeapSort';\r\nimport ShellSort, {\r\n  ShellSortKey,\r\n  ShellSortDesc,\r\n  ShellSortP\r\n} from '../algorithms/ShellSort';\r\n\r\nclass Khwarizmi extends Component {\r\n  state = {\r\n    array: [],\r\n    arraySize: 10,\r\n    trace: [],\r\n    algorithm: null,\r\n    appDrawerOpen: false\r\n  };\r\n\r\n  saveInput = (e) => {\r\n    this.setState({ input: e.target.value });\r\n  };\r\n\r\n  ALGORITHM = {\r\n    'Bubble Sort': BubbleSort,\r\n    'Selection Sort': SelectionSort,\r\n    'Insertion Sort': InsertionSort,\r\n    'Merge Sort': MergeSort,\r\n    'Quick Sort': QuickSort,\r\n    'Quick Sort 3': QuickSort3,\r\n    'Heap Sort': HeapSort,\r\n    'Shell Sort': ShellSort\r\n  };\r\n\r\n  ALGORITHM_KEY = {\r\n    'Bubble Sort': BubbleSortKey,\r\n    'Selection Sort': SelectionSortKey,\r\n    'Insertion Sort': InsertionSortKey,\r\n    'Merge Sort': MergeSortKey,\r\n    'Quick Sort': QuickSortKey,\r\n    'Quick Sort 3': QuickSort3Key,\r\n    'Heap Sort': HeapSortKey,\r\n    'Shell Sort': ShellSortKey\r\n  };\r\n\r\n  ALGORITHM_DESC = {\r\n    'Bubble Sort': BubbleSortDesc,\r\n    'Selection Sort': SelectionSortDesc,\r\n    'Insertion Sort': InsertionSortDesc,\r\n    'Merge Sort': MergeSortDesc,\r\n    'Quick Sort': QuickSortDesc,\r\n    'Quick Sort 3': QuickSort3Desc,\r\n    'Heap Sort': HeapSortDesc,\r\n    'Shell Sort': ShellSortDesc\r\n  };\r\n  ALGORITHM_P = {\r\n    'Bubble Sort': BubbleSortP,\r\n    'Selection Sort': SelectionSortP,\r\n    'Insertion Sort': InsertionSortP,\r\n    'Merge Sort': MergeSortP,\r\n    'Quick Sort': QuickSortP,\r\n    \r\n    'Heap Sort': HeapSortP,\r\n    'Shell Sort': ShellSortP\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.generateRandomArray();\r\n  }\r\n  \r\n\r\n  generateRandomArray = () => {\r\n    // Generate pseudo-random number between 1 and max\r\n    function getRandomInt(max) {\r\n      return Math.floor(Math.random() * Math.floor(max)) + 1;\r\n    }\r\n\r\n    // Generate an array of length max\r\n    const array = Array(this.state.arraySize)\r\n      .fill(0)\r\n      .map(() => getRandomInt(this.state.arraySize * 5));\r\n\r\n    this.setState(\r\n      {\r\n        array,\r\n        trace: []\r\n      },\r\n      this.createTrace\r\n    );\r\n  };\r\n\r\n  deletewholeArray = (array) => {\r\n    while(array){\r\n    array.pop();}\r\n    this.setState(\r\n      {\r\n        array:[],\r\n        trace: []\r\n      },\r\n      this.createTrace\r\n    );\r\n  };\r\n\r\n  deleteArray = (array) => {\r\n    this.state.array.pop();\r\n    this.setState(\r\n      {\r\n        array:[...this.state.array],\r\n        trace: []\r\n      },\r\n      this.createTrace\r\n    );\r\n  };\r\n  insertwithIndex=(array ,index)=>{\r\n    let y = document.getElementById(\"array2\").value;\r\n    let c = parseInt(y);\r\n    let b = document.getElementById(\"index\").value;\r\n    let d = parseInt(b);\r\n    /*console.log(array.join()); \r\narray.splice(d, 0, c);\r\nconsole.log(array.join());*/\r\n\r\n//array.insert(d,c);\r\n\r\n//just to avoid error\r\nthis.state.array.push(c);\r\n    this.setState(\r\n      {\r\n        array:[...this.state.array],\r\n        trace: []\r\n      },\r\n      this.createTrace\r\n    );\r\n  }\r\n\r\n  insertArray =(array) => {\r\n    \r\n    let y = document.getElementById(\"array\").value;\r\n    let c = parseInt(y)\r\n\r\n    this.state.array.push(c);\r\n    this.setState(\r\n      {\r\n        array:[...this.state.array],\r\n        trace: []\r\n      },\r\n      this.createTrace\r\n    );\r\n    //console.log(array)\r\n  };\r\n\r\n  handleAlgorithmChange = (algorithm) => {\r\n    this.setState({ algorithm }, this.generateRandomArray);\r\n  };\r\n  \r\n  handleArraySizeChange = (size) => {\r\n    size = Number(size);\r\n    size = size > 100 ? 100 : size;\r\n    size = size < 0 ? 0 : size;\r\n    this.setState({ arraySize: size }, this.generateRandomArray);\r\n  };\r\n\r\n  createTrace = () => {\r\n    const numbers = [...this.state.array];\r\n    const sort = this.ALGORITHM[this.state.algorithm];\r\n    if (sort) {\r\n      const trace = sort(numbers);\r\n      this.setState({ trace });\r\n    }\r\n  };\r\n\r\n  toggleDrawer = () => {\r\n    this.setState((prevState) => ({\r\n      drawerOpen: !prevState.drawerOpen\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let theme = `Khwarizmi`;\r\n    if (this.state.drawerOpen) theme += ` Khwarizmi_modal_open`;\r\n\r\n    const colorKey = this.ALGORITHM_KEY[this.state.algorithm];\r\n    const desc = this.ALGORITHM_DESC[this.state.algorithm];\r\n    const desP = this.ALGORITHM_P[this.state.algorithm];\r\n    \r\n\r\n    const controls = (\r\n\r\n\r\n      <Controls\r\n        onGenerateRandomArray={this.generateRandomArray}\r\n        algorithm={this.state.algorithm}\r\n        onAlgorithmChange={this.handleAlgorithmChange}\r\n        insertArray={this.insertArray}\r\n        insertwithIndex={this.insertwithIndex}\r\n        deleteArray={this.deleteArray}\r\n        deletewholeArray={this.deletewholeArray}\r\n        arraySize={this.state.arraySize}\r\n        onArraySizeChange={this.handleArraySizeChange}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div className={theme}>\r\n        <TopBar\r\n          drawerOpen={this.state.drawerOpen}\r\n          toggleDrawer={this.toggleDrawer}\r\n        >\r\n          {controls}\r\n        </TopBar>\r\n\r\n        <Drawer\r\n          open={this.state.drawerOpen}\r\n          closeDrawer={this.toggleDrawer}\r\n        >\r\n          {controls}\r\n        </Drawer>\r\n\r\n        <main className=\"Khwarizmi__Body\">\r\n          <SortVisualizer\r\n            array={this.state.array}\r\n            trace={this.state.trace}\r\n            colorKey={colorKey}\r\n            desc={desc}\r\n            desP={desP}\r\n          />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Khwarizmi;","D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\BubbleSort.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\helpers.js",["459"],"\nimport Bar2 from \"../celling/Bar2\"; \n\nexport const newTrace = (array) => {\n  return [\n    {\n      array: [...array],\n      groupA: [],\n      groupB: [],\n      groupC: [],\n      groupD: [],\n      sortedIndices: []\n    }\n  ];\n};\n\nexport const addToTrace = (\n  trace,\n  array,\n  sortedIndices = [],\n  groupA = [],\n  groupB = [],\n  groupC = [],\n  groupD = []\n) => {\n  trace.push({\n    array: [...array],\n    groupA: [...groupA],\n    groupB: [...groupB],\n    groupC: [...groupC],\n    groupD: [...groupD],\n    sortedIndices: [...sortedIndices]\n  });\n};\n\nexport const lastSorted = (trace) => {\n  return trace[trace.length - 1].sortedIndices;\n};\n\nexport const swap = (array, i, j) => {\n  \n  const tmp = array[i];\n  array[i] = array[j];\n  array[j] = tmp;\n  \n};\n\nexport const createRange = (start, end) => {\n  return [...Array(end - start).keys()].map((elem) => elem + start);\n};\n\nexport const createKey = (groupA, groupB, groupC, groupD) => {\n  return { groupA, groupB, groupC, groupD };\n};\n","D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\ShellSort.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\SelectionSort.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\MergeSort.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\InsertionSort.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\HeapSort.js",["460"],"import React from 'react';\nimport {\n  swap,\n  newTrace,\n  addToTrace,\n  lastSorted,\n  createRange,\n  createKey\n} from './helpers';\n\nconst HeapSort = (nums) => {\n  const trace = newTrace(nums);\n\n  // Helper functions to quickly access nodes\n  const left = (i) => 2 * i + 1;\n  const right = (i) => 2 * i + 2;\n  const parent = (i) => Math.floor((i - 1) / 2);\n\n  const maxHeapify = (array, i, heapsize) => {\n    const leftChild = left(i);\n    const rightChild = right(i);\n\n    // Visualize: Compare parent and leftChild\n    addToTrace(trace, array, lastSorted(trace), [i, leftChild]);\n\n    let largest =\n      leftChild < heapsize && array[leftChild] > array[i]\n        ? leftChild\n        : i;\n\n    // Visualize: Compare largest and rightChild\n    addToTrace(trace, array, lastSorted(trace), [largest, rightChild]);\n\n    if (rightChild < heapsize && array[rightChild] > array[largest])\n      largest = rightChild;\n\n    if (largest !== i) {\n      // Visualize: Select largest child and parent\n      addToTrace(trace, array, lastSorted(trace), [], [i, largest]);\n\n      swap(array, i, largest);\n\n      // Visualize: Swap largest child and parent\n      addToTrace(trace, array, lastSorted(trace), [], [i, largest]);\n\n      maxHeapify(array, largest, heapsize);\n    }\n  };\n\n  const BuildMaxHeap = (array) => {\n    const start = Math.floor(array.length / 2);\n    const heapsize = array.length;\n    for (let i = start; i >= 0; i--) {\n      maxHeapify(array, i, heapsize);\n    }\n\n    // Visualize: Mark heap as built\n    addToTrace(\n      trace,\n      array,\n      lastSorted(trace),\n      [],\n      [],\n      [],\n      createRange(0, array.length)\n    );\n  };\n\n  const heapSort = (array) => {\n    BuildMaxHeap(array);\n    let heapsize = array.length;\n    for (let i = array.length - 1; i > 0; i--) {\n      // Visualize: Select Maximum\n      addToTrace(trace, array, lastSorted(trace), [], [0, i]);\n\n      swap(array, 0, i);\n      heapsize -= 1;\n\n      // Visualize: Swap with last element in heap\n      addToTrace(trace, array, [...lastSorted(trace), i], [], [0, i]);\n\n      maxHeapify(array, 0, heapsize);\n\n      // Visualize: Heap created\n      addToTrace(\n        trace,\n        array,\n        lastSorted(trace),\n        [],\n        [],\n        [],\n        createRange(0, heapsize)\n      );\n    }\n    addToTrace(trace, array, [...lastSorted(trace), 0]);\n  };\n\n  // Execute Heapsort\n  heapSort(nums);\n  return trace;\n};\n\nexport const HeapSortKey = createKey(\n  'Comparing',\n  'Swapping',\n  null,\n  'Heap Built'\n);\n\n\nexport const HeapSortP= {\n\n  description: (\n    <p>\n    <div className=\"card post\" Style=\"text-align:left\" > \n          <div id=\"screen\" Style=\"margin: 15px\">\n                do <br/> \n                <span id=\"swapped\" Style=\"margin-left:20px\">\n                swapped = false <br/>\n                  </span><br/>\n            <span id=\"change\" Style=\"margin-left:40px\" >\n              for i = 1 to indexOfLastUnsortedElement-1<br/>\n            </span><br/>\n            <span id=\"compare\" className=\"Bar_stateA\" Style=\"margin-left:60px\">\n              if leftElement > rightElement<br/>\n            </span><br/>\n            <span id=\"swap\" Style=\"margin-left:80px\">\n                swap(leftElement, rightElement) <br/> </span><br/>\n            <span id=\"swap\"  Style=\"margin-left:80px\">\n                swapped = true <br/>\n            </span><br/>\n            <span id=\"change\">while swapped</span>\n          </div></div>\n         \n    </p>\n  ),\n \n};\n\n\n\n\n\n\n\nexport const HeapSortDesc = {\n  title: 'Heap Sort',\n  description: (\n    <div>\n      <p>\n        <a\n          href=\"https://en.wikipedia.org/wiki/Heapsort\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Heap Sort\n        </a>{' '}\n        can be thought of as an improved selection sort that uses the\n        heap data structure rather than a linear-time search to find the\n        maximum or minimum element. It is an in-place sorting algorithm\n        that is not stable and has a somewhat slower running time than\n        Quicksort in practice.\n      </p>\n      <p>\n        The heapsort algorithm can be divided into two parts. In the\n        first step, a heap is built out of the data. The heap is often\n        placed in an array with the layout of a complete binary tree. In\n        the second step, a sorted array is created by repeatedly\n        removing the largest element from the heap (the root of the\n        heap), and inserting it into the array. The heap is updated\n        after each removal to maintain the heap property. Once all\n        objects have been removed from the heap, the result is a sorted\n        array.\n      </p>\n      <ol>\n        <li>\n          Call the buildMaxHeap() function on the list. Also referred to\n          as heapify(), this builds a heap from a list in O(n)\n          operations.\n        </li>\n        <li>\n          Swap the first element of the list with the final element.\n          Decrease the considered range of the list by one.\n        </li>\n        <li>\n          Call the <em>siftDown()</em>, also called{' '}\n          <em>maxHeapify()</em> function on the list to sift the new\n          first element to its appropriate index in the heap.\n        </li>\n        <li>\n          Go to step (2) unless the considered range of the list is one\n          element.\n        </li>\n      </ol>\n    </div>\n  ),\n  worstCase: (\n    <span>\n      O(<em>n</em> log <em>n</em>)\n    </span>\n  ),\n  avgCase: (\n    <span>\n      O(<em>n</em> log <em>n</em>)\n    </span>\n  ),\n  bestCase: (\n    <span>\n      O(<em>n</em> log <em>n</em>)\n    </span>\n  ),\n  space: <span>O(1)</span>\n};\n\nexport default HeapSort;\n","D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\QuickSort3.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\algorithms\\QuickSort.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\middle\\TopBar\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Controls\\index.js",["461"],"import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\nimport Button from '../Button';\r\nimport Menu from '../Menu';\r\nimport Button1 from '../Button1';\r\n\r\n\r\nconst Controls = ({\r\n  algorithm,\r\n  onAlgorithmChange,\r\n  onGenerateRandomArray,\r\n  arraySize,\r\n  insertArray,\r\n  insertwithIndex,\r\n  deleteArray,\r\n  deletewholeArray,\r\n  onArraySizeChange,\r\n  }) => {\r\n    return (\r\n      <Fragment>\r\n        <Menu\r\n          placeholder=\"Sort Algorithm\"\r\n          items={[\r\n            'Bubble Sort',\r\n            'Selection Sort',\r\n            'Insertion Sort',\r\n            'Merge Sort',\r\n            'Quick Sort',\r\n            'Heap Sort'\r\n          ]}\r\n          selected={algorithm}\r\n          onSelect={onAlgorithmChange}\r\n        />\r\n  \r\n        <div className=\"Controls__Size\">\r\n          <span>Size</span>\r\n          <Menu\r\n            placeholder=\"Array Size\"\r\n            items={['5', '10', '25', '50', '75', '100']}\r\n            selected={String(arraySize)}\r\n            onSelect={onArraySizeChange}\r\n          />\r\n        </div>\r\n\r\n        <Button1 onClick={insertwithIndex}>insertwithIndex\r\n\r\n      </Button1> <input id=\"array2\" type=\"text\" Style=\"width:50px;height:25px\"></input><input id =\"index\" type=\"text\"Style=\"width:50px;height:25px \"></input>\r\n      \r\n      <Button1 onClick={deletewholeArray}>Delete_array</Button1>\r\n      \r\n      <Button1 onClick={insertArray}>Insert\r\n      </Button1> <input id=\"array\" type=\"text\" Style=\"width:50px;height:25px \"></input>\r\n      \r\n      <Button1 onClick={deleteArray}>Delete</Button1>\r\n      <Button1 onClick={onGenerateRandomArray}>Randomize</Button1>\r\n\r\n      </Fragment>\r\n    );\r\n  };\r\n  \r\n  Controls.propTypes = {\r\n    algorithm: PropTypes.string,\r\n  onAlgorithmChange: PropTypes.func.isRequired,\r\n  onGenerateRandomArray: PropTypes.func.isRequired,\r\n  arraySize: PropTypes.number,\r\n  onArraySizeChange: PropTypes.func.isRequired,\r\n  onToggleDarkMode: PropTypes.func.isRequired,\r\n  darkMode: PropTypes.bool,\r\n  insertArray: PropTypes.func.isRequired,\r\n  insertwithIndex: PropTypes.func.isRequired,\r\n  deleteArray: PropTypes.func.isRequired,\r\n  };\r\n  \r\n  export default Controls;","D:\\CSE499A\\al-khwarizmi\\src\\components\\floor\\SortVisualizer\\index.js",["462","463","464","465","466"],"import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\n// Sub components\r\nimport Bar2 from '../../celling/Bar2';\r\nimport SortChart2 from '../SortChart2';\r\nimport SortChart1 from '../SortChart1';\r\nimport SortChart from '../SortChart';\r\nimport VisualizerControls from '../../middle/VisualizerControls';\r\nimport ProgressBar from '../../middle/ProgressBar';\r\nimport ColorKey from '../../celling/ColorKey';\r\nimport SortInfo from '../SortInfo';\r\nimport { newTrace } from '../../algorithms/helpers';\r\nimport { Sd } from '../Sd/sd';\r\n\r\n\r\nimport SortInfoP from '../SortInfoP';\r\n\r\nclass SortVisualizer extends Component {\r\n  state = {\r\n    trace: [],\r\n    traceStep: -1,\r\n\r\n    originalArray: [],\r\n    array: [],\r\n    groupA: [],\r\n    groupB: [],\r\n    groupC: [],\r\n    groupD: [],\r\n    sortedIndices: [],\r\nl1:[],\r\nl2:[],\r\nl3:[],\r\nl4:[],\r\nl5:[],\r\nl6:[],\r\n    timeoutIds: [],\r\n    playbackSpeed: 1\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.array !== this.props.array) {\r\n      this._reset(this.props.array);\r\n    }\r\n    if (prevProps.trace !== this.props.trace) {\r\n      this.clearTimeouts();\r\n      this.setState({ trace: this.props.trace });\r\n    }\r\n  }\r\n\r\n  // Actions\r\n\r\n  _reset = (array) => {\r\n    this.setState({\r\n      array,\r\n      trace: [],\r\n      traceStep: -1,\r\n      groupA: [],\r\n      groupB: [],\r\n      groupC: [],\r\n      groupD: [],\r\n      sortedIndices: [],\r\n      originalArray: [...array]\r\n    });\r\n  };\r\n\r\n  clearTimeouts = () => {\r\n    this.state.timeoutIds.forEach((timeoutId) =>\r\n      clearTimeout(timeoutId)\r\n    );\r\n    this.setState({ timeoutIds: [] });\r\n  };\r\n\r\n  _changeVisualState = (visualState) => {\r\n    this.setState({\r\n      array: visualState.array,\r\n      groupA: visualState.groupA,\r\n      groupB: visualState.groupB,\r\n      groupC: visualState.groupC,\r\n      groupD: visualState.groupD,\r\n      sortedIndices: visualState.sortedIndices\r\n    });\r\n  };\r\n\r\n  run = (trace) => {\r\n    const timeoutIds = [];\r\n    const timer = 250 / this.state.playbackSpeed;\r\n\r\n    // Set a timeout for each item in the trace\r\n    trace.forEach((item, i) => {\r\n      let timeoutId = setTimeout(\r\n        (item) => {\r\n          this.setState(\r\n            (prevState) => ({\r\n              traceStep: prevState.traceStep + 1\r\n            }),\r\n            this._changeVisualState(item)\r\n          );\r\n        },\r\n        i * timer,\r\n        item\r\n      );\r\n\r\n      timeoutIds.push(timeoutId);\r\n    });\r\n\r\n    // Clear timeouts upon completion\r\n    let timeoutId = setTimeout(\r\n      this.clearTimeouts,\r\n      trace.length * timer\r\n    );\r\n    timeoutIds.push(timeoutId);\r\n\r\n    this.setState({ timeoutIds });\r\n  };\r\n\r\n  pause = () => {\r\n    this.clearTimeouts();\r\n  };\r\n\r\n  continue = () => {\r\n    const trace = this.state.trace.slice(this.state.traceStep);\r\n    this.run(trace);\r\n  };\r\n\r\n  stepForward = () => {\r\n    const trace = this.state.trace;\r\n    const step = this.state.traceStep;\r\n    if (step < trace.length - 1) {\r\n      const item = trace[step + 1];\r\n      this.setState(\r\n        { traceStep: step + 1 },\r\n        this._changeVisualState(item)\r\n      );\r\n    }\r\n  };\r\n\r\n  stepBackward = () => {\r\n    const trace = this.state.trace;\r\n    const step = this.state.traceStep;\r\n    if (step > 0) {\r\n      const item = trace[step - 1];\r\n      this.setState(\r\n        { traceStep: step - 1 },\r\n        this._changeVisualState(item)\r\n      );\r\n    }\r\n  };\r\n\r\n  repeat = () => {\r\n    this.clearTimeouts();\r\n    this.setState((prevState) => ({\r\n      array: [...prevState.originalArray],\r\n      traceStep: -1,\r\n      comparing: [],\r\n      compared: [],\r\n      sorted: []\r\n    }));\r\n    this.run(this.state.trace);\r\n  };\r\n\r\n  adjustPlaybackSpeed = (speed) => {\r\n    const playing = this.state.timeoutIds.length > 0;\r\n    this.pause();\r\n    const playbackSpeed = Number(speed.split('x')[0]);\r\n    this.setState({ playbackSpeed }, () => {\r\n      if (playing) this.continue();\r\n    });\r\n  };\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SortVisualizer\">\r\n        <div className=\"SVtable\">\r\n        <SortChart1\r\n          numbers={this.state.array}\r\n          maxNum={Math.max(...this.state.array)}\r\n          groupA={this.state.groupA}\r\n          groupB={this.state.groupB}\r\n          groupC={this.state.groupC}\r\n          groupD={this.state.groupD}\r\n          sortedIndices={this.state.sortedIndices}\r\n          tracestep={this.state.tracestep}\r\n          trace={this.state.trace}\r\n        />\r\n      \r\n        </div>\r\n        <div>\r\n        <SortChart\r\n\r\n          numbers={this.state.array}\r\n          maxNum={Math.max(...this.state.array)}\r\n          groupA={this.state.groupA}\r\n          groupB={this.state.groupB}\r\n          groupC={this.state.groupC}\r\n          groupD={this.state.groupD}\r\n          sortedIndices={this.state.sortedIndices}\r\n          l0={this.state.l0}\r\n          l1={this.state.l1}\r\n          l2={this.state.l2}\r\n          l3={this.state.l2}\r\n          l4={this.state.l2}\r\n          l5={this.state.l2}\r\n          l6={this.state.l2}\r\n          {...this.props.desP}\r\n\r\n        />\r\n        \r\n</div>\r\n     \r\n        <div className=\"SortVisualizer__ProgressBar\">\r\n          <ProgressBar\r\n            width={\r\n              this.state.trace.length > 0\r\n                ? (this.state.traceStep /\r\n                    (this.state.trace.length - 1)) *\r\n                  100\r\n                : 0\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <VisualizerControls\r\n          onPlay={\r\n            this.state.traceStep === -1\r\n              ? this.run.bind(this, this.state.trace)\r\n              : this.continue.bind(this)\r\n          }\r\n          onPause={this.pause.bind(this)}\r\n          onForward={this.stepForward.bind(this)}\r\n          onBackward={this.stepBackward.bind(this)}\r\n          onRepeat={this.repeat.bind(this)}\r\n          onAdjustSpeed={this.adjustPlaybackSpeed}\r\n          playing={this.state.timeoutIds.length > 0}\r\n          playDisabled={\r\n            (this.state.traceStep >= this.state.trace.length - 1 &&\r\n              this.state.traceStep !== -1) ||\r\n            this.state.trace.length <= 0\r\n          }\r\n          forwardDisabled={\r\n            this.state.traceStep >= this.state.trace.length - 1\r\n          }\r\n          backwardDisabled={this.state.traceStep <= 0}\r\n          repeatDisabled={this.state.traceStep <= 0}\r\n          playbackSpeed={this.state.playbackSpeed}\r\n        />\r\n    \r\n\r\n\r\n\r\n    \r\n\r\n        <ColorKey {...this.props.colorKey} />\r\n        \r\n\r\n        <SortInfo {...this.props.desc} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortVisualizer;","D:\\CSE499A\\al-khwarizmi\\src\\components\\middle\\TopBar\\TopBarElements.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\middle\\VisualizerControls\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\floor\\SortChart1\\index.js",["467","468"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport BubbleSort from '../../algorithms/BubbleSort';\nimport Bar1 from '../../celling/Bar1';\nimport { psudo } from '../../algorithms/BubbleSort';\nconst getListOfBars = (\n  numbers,\n  maxNum,\n  groupA,\n  groupB,\n  groupC,\n  groupD,\n  sortedIndices,\n  trace,\n  tracestep,\n  number=[1,2,3],\n  t2\n\n) => {\n  return numbers.map((num,i) => {\n\n    //i=parseInt(maxNum);\n    \n     \n    let width = 100 / number.length;\n    let height = (num / 3) * 100;\n    let stateA = groupA.includes(i);\n    let stateB = groupB.includes(i);\n    let stateC = groupC.includes(i);\n    let stateD = groupD.includes(i);\n    let sorted = sortedIndices.includes(i);\n  \n \n  return (\n    <Bar1\n      key={`${i}_${num}`}\n      width={\"5\"}\n      height={\"5\"}\n      val={width > 4 ? num : null}\n      stateA={stateA}\n      stateB={stateB}\n      stateC={stateC}\n      stateD={stateD}\n      sorted={sorted}\n      \n    />\n  );\n  });}\n\nconst SortChart1 = ({\n  numbers,\n  maxNum,\n  groupA,\n  groupB,\n  groupC,\n  groupD,\n  sortedIndices,\n  trace,\n  tracestep,\n  t2=BubbleSort\n}) => {\n  return (\n    <div className=\"SortChart1\">\n      {getListOfBars(\n        numbers,\n        maxNum,\n        groupA,\n        groupB,\n        groupC,\n        groupD,\n        sortedIndices,\n        trace,\n        tracestep,\n        t2\n      )}\n    </div>\n  );\n};\n\nSortChart1.propTypes = {\n  numbers: PropTypes.arrayOf(PropTypes.number),\n  maxNum: PropTypes.number,\n  tracestep: PropTypes.number,\n  groupA: PropTypes.arrayOf(PropTypes.number),\n  groupB: PropTypes.arrayOf(PropTypes.number),\n  groupC: PropTypes.arrayOf(PropTypes.number),\n  groupD: PropTypes.arrayOf(PropTypes.number),\n  sortedIndices: PropTypes.arrayOf(PropTypes.number)\n};\n\nexport default SortChart1;\n","D:\\CSE499A\\al-khwarizmi\\src\\components\\floor\\SortChart\\index.js",["469","470","471","472","473","474","475"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nimport Bar from '../../celling/Bar';\r\nimport SortInfoP from '../SortInfoP';\r\n \r\nconst getListOfBars = (\r\n  numbers,\r\n  maxNum,\r\n  groupA,\r\n  groupB,\r\n  groupC,\r\n  groupD,\r\n  sortedIndices\r\n) => {\r\n  return numbers.map((num, i) => {\r\n    let width = 100 / numbers.length;\r\n    let height = (num / maxNum) * 100;\r\n    let stateA = groupA.includes(i);\r\n    let stateB = groupB.includes(i);\r\n    let stateC = groupC.includes(i);\r\n    let stateD = groupD.includes(i);\r\n    let sorted = sortedIndices.includes(i);\r\n\r\n    let margin =\r\n      i === numbers.length ? '0' : width > 3 ? '0.5rem' : '0.125rem';\r\n    return (\r\n      <Bar\r\n        key={`${i}_${num}`}\r\n        width={width}\r\n        height={height}\r\n        val={width > 4 ? num : null}\r\n        stateA={stateA}\r\n        stateB={stateB}\r\n        stateC={stateC}\r\n        stateD={stateD}\r\n        sorted={sorted}\r\n        style={{ marginRight: `${margin}` }}\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\n\r\nconst SortChartR = (\r\n  numbers,\r\n  maxNum,\r\n  groupA,\r\n  groupB,\r\n  groupC,\r\n  groupD,\r\n  sortedIndices,\r\n l0,\r\n  l1,\r\n  l2,\r\n  l3,\r\n  l4,\r\n  l5,\r\n  l6,\r\n  l7,\r\n  l8,\r\n  l9,\r\n  l10,\r\n  \r\n) => {\r\n\r\n  let classNames = 'SortChartR';\r\n  let classNamesC = 'SortChartR';\r\n  let classNamesSW = 'SortChartR';\r\n  let classNamesSR = 'SortChartR';\r\n  let classNamesPivot = 'SortChartR';\r\n  let classNamesMemory = 'SortChartR';\r\n   numbers.map((num, i) => {\r\n    let width = 100 / numbers.length;\r\n    let height = (num / maxNum) * 100;\r\n    let stateA = groupA.includes(i);\r\n    let stateB = groupB.includes(i);\r\n    let stateC = groupC.includes(i);\r\n    let stateD = groupD.includes(i);\r\n    let sorted = sortedIndices.includes(i);\r\n\r\n      \r\n      if (sorted){ classNamesSR += ' P_sorted';\r\n   }\r\n      \r\n      if (stateD) classNamesPivot += ' P_stateD';\r\n      else if (stateC) classNamesMemory += ' P_stateC';\r\n      else if (stateB){ classNamesSW += ' P_stateB';\r\n      classNamesSR += 'P_default';\r\n    }\r\n      else if (stateA) {classNamesC += ' Bar_stateA';\r\n      classNamesSR += 'P_default';\r\n    }\r\n\r\n    } );\r\n\r\n\r\n\r\n    \r\nreturn(\r\n  /*\r\n    <div className=\"SortChartR\" Style=\"text-align:left\" > \r\n    <div id=\"screen\" Style=\"margin: 15px\">\r\n   \r\n          do <br/> \r\n          <span className={classNames} Style=\"margin-left:20px\">\r\n          swapped = false <br/>\r\n            </span><br/>\r\n      <span id=\"change\" Style=\"margin-left:40px\" >\r\n        for i = 1 to indexOfLastUnsortedElement-1<br/>\r\n      </span><br/>\r\n      <span className={classNamesC}  Style=\"margin-left:60px\">\r\n       if leftElement > rightElement\r\n       <br/>\r\n      </span><br/>\r\n      <span className={classNamesSW} Style=\"margin-left:60px\">\r\n          swap(leftElement, rightElement) <br/> </span><br/>\r\n      <span className={classNamesSR} Style=\"margin-left:10px\">\r\n          swapped = true <br/>\r\n      </span><br/>\r\n      <span id=\"change\"> {title ? title : 'while swapped'} </span>\r\n\r\n    </div></div>*/\r\n<div>\r\n<td><code>{l0}</code></td><br/>\r\n    <td>\r\n   <code>{l1}</code>\r\n  </td>\r\n  <br/>\r\n  <td>\r\n    <code >   {l2}  </code>\r\n  </td>\r\n  <br/>\r\n  <td>\r\n    <code  className={classNamesC}>{l3}</code>\r\n    <br/>\r\n  </td>\r\n  <br/>\r\n  <td>\r\n    \r\n    <code className={classNamesSW}>{l4}</code>\r\n  </td>\r\n\r\n<br/>\r\n<td>\r\n    \r\n    <code className={classNamesSW}>{l5}</code>\r\n  </td>\r\n\r\n<br/>\r\n  <td>\r\n    <code className={classNamesSR || classNamesMemory} >{l6}</code>\r\n  <code className={classNamesMemory}>{l10}</code>\r\n  </td><br/>\r\n  <td>\r\n  <code>{l7}</code></td><br/>\r\n  <td>\r\n  <code>{l8}</code></td><br/>\r\n  <td>\r\n  \r\n  <code>{l9}</code></td><br/>\r\n  \r\n\r\n</div>\r\n\r\n    \r\n)\r\n  \r\n  \r\n};\r\n\r\n\r\n\r\nconst SortChart = ({\r\n  numbers,\r\n  maxNum,\r\n  groupA,\r\n  groupB,\r\n  groupC,\r\n  groupD,\r\n  sortedIndices,\r\n  l0,\r\n  l1,\r\n  l2,\r\n  l3,\r\n  l4,\r\n  l5,\r\n  l6,\r\n  l7,\r\n  l8,\r\n  l9,\r\n  l10,\r\n  \r\n}) => {\r\n  return (\r\n    <div className=\"SortChart\">\r\n      <div className='SortChartL'>{getListOfBars(\r\n        numbers,\r\n        maxNum,\r\n        groupA,\r\n        groupB,\r\n        groupC,\r\n        groupD,\r\n        sortedIndices\r\n      )}</div>\r\n       <aside className=\"SortChartR\">{SortChartR(\r\n         numbers,\r\n         maxNum,\r\n         groupA,\r\n         groupB,\r\n         groupC,\r\n         groupD,\r\n         \r\n         \r\n         sortedIndices,\r\n         l0,\r\n         l1,\r\n         l2,\r\n         l3,\r\n         l4,\r\n         l5,\r\n         l6,\r\n         l7,\r\n  l8,\r\n  l9,\r\n  l10,\r\n         \r\n         \r\n       )}\r\n      \r\n       </aside>\r\n       \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nSortChart.propTypes = {\r\n  l0: PropTypes.string,\r\n  l1: PropTypes.string,\r\n  l2: PropTypes.object,\r\n  l3: PropTypes.object,\r\n  l4: PropTypes.string,\r\n  l5: PropTypes.string,\r\n  l6: PropTypes.string,\r\n  l7: PropTypes.string,\r\n  l8: PropTypes.object,\r\n  l9: PropTypes.object,\r\n  l10: PropTypes.string,\r\n\r\n  title: PropTypes.string,\r\n  numbers: PropTypes.arrayOf(PropTypes.number),\r\n  maxNum: PropTypes.number,\r\n  title:PropTypes.string,\r\n  groupA: PropTypes.arrayOf(PropTypes.number),\r\n  groupB: PropTypes.arrayOf(PropTypes.number),\r\n  groupC: PropTypes.arrayOf(PropTypes.number),\r\n  groupD: PropTypes.arrayOf(PropTypes.number),\r\n  sortedIndices: PropTypes.arrayOf(PropTypes.number)\r\n};\r\n\r\nexport default SortChart;\r\n","D:\\CSE499A\\al-khwarizmi\\src\\components\\floor\\SortChart2\\index.js",["476"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nimport Bar2 from '../../celling/Bar2';\nimport Bar from '../../celling/Bar';\n\nconst getListOfBars = (\n  numbers,\n  maxNum,\n  groupA,\n  groupB,\n  groupC,\n  groupD,\n  sortedIndices\n) => {\n  return (() => {\n    let width = 100 ;\n    let height =  100;\n    let stateA = groupA;\n    let stateB = groupB;\n    let stateC = groupC;\n    let stateD = groupD;\n    let sorted = sortedIndices;\n\n    \n    return (\n      <Bar2\n        \n        width={width}\n        height={height}\n      \n        stateA={stateA}\n        stateB={stateB}\n        stateC={stateC}\n        stateD={stateD}\n        sorted={sorted}\n        \n      />\n    );\n  });\n};\n\nconst SortChart2 = ({\n  numbers,\n  maxNum,\n  groupA,\n  groupB,\n  groupC,\n  groupD,\n  sortedIndices\n}) => {\n  return (\n    <div className=\"SortChart2\">\n      {getListOfBars(\n        numbers,\n        maxNum,\n        groupA,\n        groupB,\n        groupC,\n        groupD,\n        sortedIndices\n      )}\n    </div>\n  );\n};\n\nSortChart2.propTypes = {\n  numbers: PropTypes.arrayOf(PropTypes.number),\n  maxNum: PropTypes.number,\n  groupA: PropTypes.arrayOf(PropTypes.number),\n  groupB: PropTypes.arrayOf(PropTypes.number),\n  groupC: PropTypes.arrayOf(PropTypes.number),\n  groupD: PropTypes.arrayOf(PropTypes.number),\n  sortedIndices: PropTypes.arrayOf(PropTypes.number)\n};\n\nexport default SortChart2;\n","D:\\CSE499A\\al-khwarizmi\\src\\components\\floor\\SortInput\\index.js",[],["477","478"],"D:\\CSE499A\\al-khwarizmi\\src\\components\\floor\\SortInfo\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\floor\\SortInfoP\\index.js",["479","480","481","482","483","484","485"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nconst SortInfoP = ({\n\n  numbers,\n  maxNum,\n  groupA,\n  groupB,\n  groupC,\n  groupD,\n  sortedIndices,\n  pseudo1,\n  \n\n\n  title,\n  description,\n  l1,\n  l2,\n  l3,\n  l4,\n  l5,\n  l6,\n  l7,\n  l8,\n  l9,\n  l10,\n  space\n}) => {\n\n  let classNames = 'SortChartR';\n  let classNamesC = 'SortChartR';\n  let classNamesSW = 'SortChartR';\n  let classNamesSR = 'SortChartR';\n  let classNamesPivot = 'SortChartR';\n  let classNamesMemory = 'SortChartR';\n   numbers.map((num, i) => {\n    let width = 100 / numbers.length;\n    let height = (num / maxNum) * 100;\n    let stateA = groupA.includes(i);\n    let stateB = groupB.includes(i);\n    let stateC = groupC.includes(i);\n    let stateD = groupD.includes(i);\n    let sorted = sortedIndices.includes(i);\n\n      \n      if (sorted) classNamesSR += ' Pseudo_sorted';\n      \n      if (stateD) classNamesPivot += ' Bar_stateD';\n      else if (stateC) classNamesMemory += ' Bar_stateC';\n      else if (stateB){ classNamesSW += ' Pseudo_stateB';\n      classNamesSR += 'Bar_default';\n    }\n      else if (stateA) {classNamesC += ' Pseudo_stateA';\n      classNamesSR += 'Bar_default';\n    }\n\n    } );\n\n\n\n\n  return (\n    <div className=\"SortInfoP\">\n      <hr />\n      \n      <div className=\"SortInfo__Body\">\n        <article className=\"SortInfo__Article\">\n          {description ? (\n            description\n          ) : (\n            <p>\n              You must select an algorithm before you can visualize it's\n              execution on an array of numbers.\n            </p>\n          )}\n           <td>\n                  {l1}\n                </td>\n                <br/>\n                <td>\n                  <code className={classNamesC}>     </code><code>{l2}</code>\n                </td>\n                <br/>\n                <td>\n                  <code className={classNamesSW}></code>:<code>{l3}</code>\n                  <br/>\n                </td>\n                <br/>\n                <td>\n                  \n                  <code className={classNamesSR}></code>:<code>{l4}</code>\n                </td>\n              \n                <td>\n                  <code>{l5}</code>\n                </td>\n        </article>\n      </div>\n    </div>\n  );\n\n/*\n  return(\n  \n    <div className=\"SortInfoP\">\n      \n      <div className=\"SortInfo__Body\">\n    <div  > \n    \n   \n          do <br/> \n          <span className={classNames} Style=\"margin-left:20px\">\n          {description}\n            </span><br/>\n      <span id=\"change\" Style=\"margin-left:40px\" >\n     {l1}\n      </span><br/>\n      <span className={classNamesC}  Style=\"margin-left:60px\"><div>\n      efv:{l2}</div>\n      </span>\n      <span className={classNamesSW} Style=\"margin-left:60px\">\n      df:{l3}  </span><br/>\n      <span className={classNamesSR} Style=\"margin-left:10px\">\n      abc:{l4}<br/>\n      </span><br/>\n      <span id=\"change\"> {title ? title : 'while swapped'} </span>\n  \n    </div></div>\n\n    </div>\n    \n  )\n  */\n\n\n\n  \n/*\n    \nreturn(\n  \n  <div className=\"SortChartR\" Style=\"text-align:left\" > \n  <div id=\"screen\" Style=\"margin: 15px\">\n \n        do <br/> \n        <span className={classNames} Style=\"margin-left:20px\">\n        swapped = false <br/>\n          </span><br/>\n    <span id=\"change\" Style=\"margin-left:40px\" >\n      for i = 1 to indexOfLastUnsortedElement-1<br/>\n    </span><br/>\n    <span className={classNamesC}  Style=\"margin-left:60px\">\n     if leftElement > rightElement<br/>\n    </span><br/>\n    <span className={classNamesSW} Style=\"margin-left:60px\">\n        swap(leftElement, rightElement) <br/> </span><br/>\n    <span className={classNamesSR} Style=\"margin-left:10px\">\n        swapped = true <br/>\n    </span><br/>\n    <span id=\"change\"> {title ? title : 'while swapped'} </span>\n\n  </div></div>\n  \n)\n\n*/\n\n};\n\nSortInfoP.propTypes = {\n  l1: PropTypes.string,\n  l2: PropTypes.object,\n  l3: PropTypes.object,\n  l4: PropTypes.string,\n  l5: PropTypes.string,\n  l6: PropTypes.string,\n  l7: PropTypes.string,\n  l8: PropTypes.object,\n  l9: PropTypes.object,\n  l10: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.object,\n  worstCase: PropTypes.object,\n  avgCase: PropTypes.object,\n  bestCase: PropTypes.object,\n  space: PropTypes.object,\n  numbers: PropTypes.arrayOf(PropTypes.number),\n  maxNum: PropTypes.number,\n  title:PropTypes.string,\n  groupA: PropTypes.arrayOf(PropTypes.number),\n  groupB: PropTypes.arrayOf(PropTypes.number),\n  groupC: PropTypes.arrayOf(PropTypes.number),\n  groupD: PropTypes.arrayOf(PropTypes.number),\n  sortedIndices: PropTypes.arrayOf(PropTypes.number)\n};\n\nexport default SortInfoP;\n","D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Drawer\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Bar2\\index.js",["486"],"import React from 'react';\nimport './style.css';\n\nconst Bar2 = ({\n  width,\n  height,\n  val,\n  stateA,\n  stateB,\n  stateC,\n  stateD,\n  sorted,\n  style,\n  a\n\n}) => {\n  let classNames = 'Bar2';\n  if (sorted) classNames += ' Bar_sorted';\n  if (stateD) classNames += ' Bar_stateD';\n  else if (stateC) classNames += ' Bar_stateC';\n  else if (stateB) classNames += ' Bar_stateB';\n  else if (stateA) classNames += ' Bar_stateA';\n  let classNames1 = 'Bar_sorted';\n  if (sorted) classNames1 += ' Bar_sorted';\n  if (stateD) classNames1 += ' Bar_stateA';\n  else if (stateC) classNames1 += ' Bar_stateB';\n  else if (stateB) classNames1 += ' Bar_stateC';\n  else if (stateA) classNames1 += ' Bar_stateD';\n\n\n  function br22()\n{\n   classNames='Bar_stateA';\n  \n}\n\n  let BarStyle = { ...style, width: `${width}%`, height: `${height}%` };\n  if (stateA || stateB || stateC || stateD) {\n    BarStyle['marginRight'] = `${0.3 * width}%`;\n    BarStyle['marginLeft'] = `${0.3 * width}% `;\n  }\n\n  return (\n    <div  className={classNames}>\n     <span className=\"Bar__Text\">{\"\"}{'}'}</span><br/>\n      <span className={classNames1}>{\"\"}</span><br/>\n     \n    \n     <div className={classNames1}><span className=\"Bar__Text\">{\"\"}</span></div>\n    \n     </div>\n    \n \n  );\n};\n\nexport default Bar2;\n","D:\\CSE499A\\al-khwarizmi\\src\\components\\middle\\ProgressBar\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\ColorKey\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Button\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Menu\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Button\\constants.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Bar\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Bar1\\index.js",["487"],"import React from 'react';\nimport './style.css';\nvar trk=false;\n\nexport const Bar1 = ({\n  width,\n  height,\n  val,\n  stateA,\n  stateB,\n  stateC,\n  stateD,\n  sorted,\n  style,\n  repeat,\n  \n}) => {\n \n  let classNames = 'Bar1';\n  if (sorted) classNames += ' Bar_sorted';\n  if (stateD) classNames += ' Bar_stateD';\n  else if (stateC) classNames += ' Bar_stateC';\n  else if (stateB) classNames += ' Bar_stateB';\n  else if (stateA) {classNames += ' Bar_stateA';\ntrk=!trk}\n\n  let classNames1 = 'Bar1';\n  if (sorted) classNames1 += ' Bar_sorted';\n  if (stateD) classNames1 += ' Bar_stateA';\n  else if (stateC) classNames1 += ' Bar_stateB';\n  else if (stateB) classNames1 += ' Bar_stateC';\n  else if (stateA) {classNames1 += ' Bar_stateD';\ntrk=!trk}\n \n \n  /*let BarStyle = { ...style, width: `${width}%`, height: `${height}%` };\n  if (stateA || stateB || stateC || stateD) {\n    BarStyle['marginRight'] = `${0.3 * width}%`;\n    BarStyle['marginLeft'] = `${0.3 * width}% `;\n  }\n*/\n  return (\n    <div> <div  className={classNames}>\n     <table Style=\"border:1px solid black; padding-left:15px; padding-right:15px; padding-top:6px; padding-bottom:6px;\">\n      <tr><span>{val}\n      </span></tr></table> \n    </div>\n    </div>\n  );\n};\nexport const psudo={trk1:trk};\nexport default Bar1;\n","D:\\CSE499A\\al-khwarizmi\\src\\components\\floor\\Sd\\sd.js",["488"],"import React from 'react'\r\nimport './sd.css'\r\n\r\nexport const Sd = () => {\r\n\r\n\r\n\r\n\r\n    /*  return (\r\n      <div className='Sd'>\r\n            <span>do</span><br/>\r\n            <span>while</span><br/>\r\n            <span>compare</span><br/>\r\n            <span>swap</span><br/>\r\n            <span>when </span><br/>\r\n            <span>sorted</span><br/>\r\n            \r\n        </div>\r\n    );*/\r\n};\r\n","D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Button1\\index.js",[],"D:\\CSE499A\\al-khwarizmi\\src\\components\\celling\\Button1\\constants.js",[],"D:\\CSE499B\\visualize-algo\\src\\index.js",[],["489","490"],"D:\\CSE499B\\visualize-algo\\src\\App.js",[],"D:\\CSE499B\\visualize-algo\\src\\pages\\signin.js",[],"D:\\CSE499B\\visualize-algo\\src\\pages\\visualize.js",[],"D:\\CSE499B\\visualize-algo\\src\\pages\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\ScrollToTop.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\Khwarizmi\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\InfoSection\\Data.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\Signin\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\HeroSection\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\InfoSection\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\Footer\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\Sidebar\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\Navbar\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\ContactUs\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\BubbleSort.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\SelectionSort.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\InsertionSort.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\HeapSort.js",["491"],"D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\MergeSort.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\QuickSort3.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\QuickSort.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\ShellSort.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\Signin\\SigninElements.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\ButtonElements.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\middle\\TopBar\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Controls\\index.js",["492"],"D:\\CSE499B\\visualize-algo\\src\\components\\floor\\SortVisualizer\\index.js",["493","494","495","496","497"],"import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\n// Sub components\r\nimport Bar2 from '../../celling/Bar2';\r\nimport SortChart2 from '../SortChart2';\r\nimport SortChart1 from '../SortChart1';\r\nimport SortChart from '../SortChart';\r\nimport VisualizerControls from '../../middle/VisualizerControls';\r\nimport ProgressBar from '../../middle/ProgressBar';\r\nimport ColorKey from '../../celling/ColorKey';\r\nimport SortInfo from '../SortInfo';\r\nimport { newTrace } from '../../algorithms/helpers';\r\nimport { Sd } from '../Sd/sd';\r\n\r\n\r\nimport SortInfoP from '../SortInfoP';\r\n\r\nclass SortVisualizer extends Component {\r\n  state = {\r\n    trace: [],\r\n    traceStep: -1,\r\n\r\n    originalArray: [],\r\n    array: [],\r\n    groupA: [],\r\n    groupB: [],\r\n    groupC: [],\r\n    groupD: [],\r\n    sortedIndices: [],\r\nl1:[],\r\nl2:[],\r\nl3:[],\r\nl4:[],\r\nl5:[],\r\nl6:[],\r\n    timeoutIds: [],\r\n    playbackSpeed: 1\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.array !== this.props.array) {\r\n      this._reset(this.props.array);\r\n    }\r\n    if (prevProps.trace !== this.props.trace) {\r\n      this.clearTimeouts();\r\n      this.setState({ trace: this.props.trace });\r\n    }\r\n  }\r\n\r\n  // Actions\r\n\r\n  _reset = (array) => {\r\n    this.setState({\r\n      array,\r\n      trace: [],\r\n      traceStep: -1,\r\n      groupA: [],\r\n      groupB: [],\r\n      groupC: [],\r\n      groupD: [],\r\n      sortedIndices: [],\r\n      originalArray: [...array]\r\n    });\r\n  };\r\n\r\n  clearTimeouts = () => {\r\n    this.state.timeoutIds.forEach((timeoutId) =>\r\n      clearTimeout(timeoutId)\r\n    );\r\n    this.setState({ timeoutIds: [] });\r\n  };\r\n\r\n  _changeVisualState = (visualState) => {\r\n    this.setState({\r\n      array: visualState.array,\r\n      groupA: visualState.groupA,\r\n      groupB: visualState.groupB,\r\n      groupC: visualState.groupC,\r\n      groupD: visualState.groupD,\r\n      sortedIndices: visualState.sortedIndices\r\n    });\r\n  };\r\n\r\n  run = (trace) => {\r\n    const timeoutIds = [];\r\n    const timer = 250 / this.state.playbackSpeed;\r\n\r\n    // Set a timeout for each item in the trace\r\n    trace.forEach((item, i) => {\r\n      let timeoutId = setTimeout(\r\n        (item) => {\r\n          this.setState(\r\n            (prevState) => ({\r\n              traceStep: prevState.traceStep + 1\r\n            }),\r\n            this._changeVisualState(item)\r\n          );\r\n        },\r\n        i * timer,\r\n        item\r\n      );\r\n\r\n      timeoutIds.push(timeoutId);\r\n    });\r\n\r\n    // Clear timeouts upon completion\r\n    let timeoutId = setTimeout(\r\n      this.clearTimeouts,\r\n      trace.length * timer\r\n    );\r\n    timeoutIds.push(timeoutId);\r\n\r\n    this.setState({ timeoutIds });\r\n  };\r\n\r\n  pause = () => {\r\n    this.clearTimeouts();\r\n  };\r\n\r\n  continue = () => {\r\n    const trace = this.state.trace.slice(this.state.traceStep);\r\n    this.run(trace);\r\n  };\r\n\r\n  stepForward = () => {\r\n    const trace = this.state.trace;\r\n    const step = this.state.traceStep;\r\n    if (step < trace.length - 1) {\r\n      const item = trace[step + 1];\r\n      this.setState(\r\n        { traceStep: step + 1 },\r\n        this._changeVisualState(item)\r\n      );\r\n    }\r\n  };\r\n\r\n  stepBackward = () => {\r\n    const trace = this.state.trace;\r\n    const step = this.state.traceStep;\r\n    if (step > 0) {\r\n      const item = trace[step - 1];\r\n      this.setState(\r\n        { traceStep: step - 1 },\r\n        this._changeVisualState(item)\r\n      );\r\n    }\r\n  };\r\n\r\n  repeat = () => {\r\n    this.clearTimeouts();\r\n    this.setState((prevState) => ({\r\n      array: [...prevState.originalArray],\r\n      traceStep: -1,\r\n      comparing: [],\r\n      compared: [],\r\n      sorted: []\r\n    }));\r\n    this.run(this.state.trace);\r\n  };\r\n\r\n  adjustPlaybackSpeed = (speed) => {\r\n    const playing = this.state.timeoutIds.length > 0;\r\n    this.pause();\r\n    const playbackSpeed = Number(speed.split('x')[0]);\r\n    this.setState({ playbackSpeed }, () => {\r\n      if (playing) this.continue();\r\n    });\r\n  };\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SortVisualizer\">\r\n        <div className='tableC'>\r\n        <div className=\"SVtable\">\r\n        <SortChart1\r\n          numbers={this.state.array}\r\n          maxNum={Math.max(...this.state.array)}\r\n          groupA={this.state.groupA}\r\n          groupB={this.state.groupB}\r\n          groupC={this.state.groupC}\r\n          groupD={this.state.groupD}\r\n          sortedIndices={this.state.sortedIndices}\r\n          tracestep={this.state.tracestep}\r\n          trace={this.state.trace}\r\n        />\r\n      </div>\r\n        </div>\r\n        <div>\r\n        <SortChart\r\n\r\n          numbers={this.state.array}\r\n          maxNum={Math.max(...this.state.array)}\r\n          groupA={this.state.groupA}\r\n          groupB={this.state.groupB}\r\n          groupC={this.state.groupC}\r\n          groupD={this.state.groupD}\r\n          sortedIndices={this.state.sortedIndices}\r\n          l0={this.state.l0}\r\n          l1={this.state.l1}\r\n          l2={this.state.l2}\r\n          l3={this.state.l2}\r\n          l4={this.state.l2}\r\n          l5={this.state.l2}\r\n          l6={this.state.l2}\r\n          {...this.props.desP}\r\n\r\n        />\r\n        \r\n</div>\r\n     \r\n        <div className=\"SortVisualizer__ProgressBar\">\r\n          <ProgressBar\r\n            width={\r\n              this.state.trace.length > 0\r\n                ? (this.state.traceStep /\r\n                    (this.state.trace.length - 1)) *\r\n                  100\r\n                : 0\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <VisualizerControls\r\n          onPlay={\r\n            this.state.traceStep === -1\r\n              ? this.run.bind(this, this.state.trace)\r\n              : this.continue.bind(this)\r\n          }\r\n          onPause={this.pause.bind(this)}\r\n          onForward={this.stepForward.bind(this)}\r\n          onBackward={this.stepBackward.bind(this)}\r\n          onRepeat={this.repeat.bind(this)}\r\n          onAdjustSpeed={this.adjustPlaybackSpeed}\r\n          playing={this.state.timeoutIds.length > 0}\r\n          playDisabled={\r\n            (this.state.traceStep >= this.state.trace.length - 1 &&\r\n              this.state.traceStep !== -1) ||\r\n            this.state.trace.length <= 0\r\n          }\r\n          forwardDisabled={\r\n            this.state.traceStep >= this.state.trace.length - 1\r\n          }\r\n          backwardDisabled={this.state.traceStep <= 0}\r\n          repeatDisabled={this.state.traceStep <= 0}\r\n          playbackSpeed={this.state.playbackSpeed}\r\n        />\r\n    \r\n\r\n\r\n\r\n    \r\n\r\n        <ColorKey {...this.props.colorKey} />\r\n        \r\n\r\n        <SortInfo {...this.props.desc} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortVisualizer;","D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Drawer\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\Footer\\FooterElements.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\HeroSection\\HeroElements.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\InfoSection\\InfoElements.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\Navbar\\NavbarElements.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\algorithms\\helpers.js",["498"],"D:\\CSE499B\\visualize-algo\\src\\components\\Sidebar\\SidebarElements.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\ContactUs\\ContactUsElements.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\middle\\TopBar\\TopBarElements.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\floor\\Sd\\sd.js",["499"],"D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Button\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Button1\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Menu\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Bar2\\index.js",["500"],"D:\\CSE499B\\visualize-algo\\src\\components\\floor\\SortChart2\\index.js",["501"],"D:\\CSE499B\\visualize-algo\\src\\components\\floor\\SortChart1\\index.js",["502","503"],"D:\\CSE499B\\visualize-algo\\src\\components\\middle\\ProgressBar\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\floor\\SortChart\\index.js",["504","505","506","507","508","509","510"],"D:\\CSE499B\\visualize-algo\\src\\components\\floor\\SortInfo\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\middle\\VisualizerControls\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\celling\\ColorKey\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\floor\\SortInfoP\\index.js",["511","512","513","514","515","516","517"],"D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Button\\constants.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Button1\\constants.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Bar\\index.js",[],"D:\\CSE499B\\visualize-algo\\src\\components\\celling\\Bar1\\index.js",["518"],"import React from 'react';\nimport './style.css';\nvar trk=false;\n\nexport const Bar1 = ({\n  width,\n  height,\n  val,\n  stateA,\n  stateB,\n  stateC,\n  stateD,\n  sorted,\n  style,\n  repeat,\n  \n}) => {\n \n  let classNames = 'Bar1';\n  if (sorted) classNames += ' Bar_sorted';\n  if (stateD) classNames += ' Bar_stateD';\n  else if (stateC) classNames += ' Bar_stateC';\n  else if (stateB) classNames += ' Bar_stateB';\n  else if (stateA) {classNames += ' Bar_stateA';\ntrk=!trk}\n\n  let classNames1 = 'Bar1';\n  if (sorted) classNames1 += ' Bar_sorted';\n  if (stateD) classNames1 += ' Bar_stateA';\n  else if (stateC) classNames1 += ' Bar_stateB';\n  else if (stateB) classNames1 += ' Bar_stateC';\n  else if (stateA) {classNames1 += ' Bar_stateD';\ntrk=!trk}\n \n \n  /*let BarStyle = { ...style, width: `${width}%`, height: `${height}%` };\n  if (stateA || stateB || stateC || stateD) {\n    BarStyle['marginRight'] = `${0.3 * width}%`;\n    BarStyle['marginLeft'] = `${0.3 * width}% `;\n  }\n*/\n  return (\n    <div> <div  className={classNames}>\n     <table Style=\"border:1px solid black; padding-left:6px; padding-right:6px; padding-top:3px; padding-bottom:3px;\">\n      <tr><span>{val}\n      </span></tr></table> \n    </div>\n    </div>\n  );\n};\nexport const psudo={trk1:trk};\nexport default Bar1;\n",{"ruleId":"519","replacedBy":"520"},{"ruleId":"521","replacedBy":"522"},{"ruleId":"523","severity":1,"message":"524","line":156,"column":9,"nodeType":"525","messageId":"526","endLine":156,"endColumn":10},{"ruleId":"523","severity":1,"message":"527","line":2,"column":8,"nodeType":"525","messageId":"526","endLine":2,"endColumn":12},{"ruleId":"523","severity":1,"message":"528","line":17,"column":9,"nodeType":"525","messageId":"526","endLine":17,"endColumn":15},{"ruleId":"523","severity":1,"message":"529","line":4,"column":8,"nodeType":"525","messageId":"526","endLine":4,"endColumn":14},{"ruleId":"523","severity":1,"message":"527","line":5,"column":8,"nodeType":"525","messageId":"526","endLine":5,"endColumn":12},{"ruleId":"523","severity":1,"message":"530","line":6,"column":8,"nodeType":"525","messageId":"526","endLine":6,"endColumn":18},{"ruleId":"523","severity":1,"message":"531","line":13,"column":10,"nodeType":"525","messageId":"526","endLine":13,"endColumn":18},{"ruleId":"523","severity":1,"message":"532","line":14,"column":10,"nodeType":"525","messageId":"526","endLine":14,"endColumn":12},{"ruleId":"523","severity":1,"message":"533","line":17,"column":8,"nodeType":"525","messageId":"526","endLine":17,"endColumn":17},{"ruleId":"523","severity":1,"message":"534","line":6,"column":10,"nodeType":"525","messageId":"526","endLine":6,"endColumn":15},{"ruleId":"523","severity":1,"message":"535","line":27,"column":9,"nodeType":"525","messageId":"526","endLine":27,"endColumn":15},{"ruleId":"523","severity":1,"message":"533","line":6,"column":8,"nodeType":"525","messageId":"526","endLine":6,"endColumn":17},{"ruleId":"523","severity":1,"message":"536","line":68,"column":7,"nodeType":"525","messageId":"526","endLine":68,"endColumn":17},{"ruleId":"537","severity":1,"message":"538","line":74,"column":25,"nodeType":"539","messageId":"540","endLine":74,"endColumn":27},{"ruleId":"523","severity":1,"message":"541","line":75,"column":9,"nodeType":"525","messageId":"526","endLine":75,"endColumn":14},{"ruleId":"523","severity":1,"message":"535","line":76,"column":9,"nodeType":"525","messageId":"526","endLine":76,"endColumn":15},{"ruleId":"523","severity":1,"message":"542","line":87,"column":19,"nodeType":"525","messageId":"526","endLine":87,"endColumn":34},{"ruleId":"543","severity":1,"message":"544","line":255,"column":3,"nodeType":"545","messageId":"546","endLine":255,"endColumn":8},{"ruleId":"523","severity":1,"message":"547","line":6,"column":8,"nodeType":"525","messageId":"526","endLine":6,"endColumn":11},{"ruleId":"519","replacedBy":"548"},{"ruleId":"521","replacedBy":"549"},{"ruleId":"523","severity":1,"message":"536","line":33,"column":7,"nodeType":"525","messageId":"526","endLine":33,"endColumn":17},{"ruleId":"537","severity":1,"message":"538","line":39,"column":25,"nodeType":"539","messageId":"540","endLine":39,"endColumn":27},{"ruleId":"523","severity":1,"message":"541","line":40,"column":9,"nodeType":"525","messageId":"526","endLine":40,"endColumn":14},{"ruleId":"523","severity":1,"message":"535","line":41,"column":9,"nodeType":"525","messageId":"526","endLine":41,"endColumn":15},{"ruleId":"523","severity":1,"message":"542","line":51,"column":19,"nodeType":"525","messageId":"526","endLine":51,"endColumn":34},{"ruleId":"523","severity":1,"message":"550","line":52,"column":24,"nodeType":"525","messageId":"526","endLine":52,"endColumn":40},{"ruleId":"543","severity":1,"message":"544","line":192,"column":3,"nodeType":"545","messageId":"546","endLine":192,"endColumn":8},{"ruleId":"523","severity":1,"message":"551","line":31,"column":12,"nodeType":"525","messageId":"526","endLine":31,"endColumn":16},{"ruleId":"523","severity":1,"message":"552","line":32,"column":21,"nodeType":"525","messageId":"526","endLine":32,"endColumn":32},{"ruleId":"523","severity":1,"message":"553","line":1,"column":8,"nodeType":"525","messageId":"526","endLine":1,"endColumn":13},{"ruleId":"519","replacedBy":"554"},{"ruleId":"521","replacedBy":"555"},{"ruleId":"523","severity":1,"message":"528","line":17,"column":9,"nodeType":"525","messageId":"526","endLine":17,"endColumn":15},{"ruleId":"523","severity":1,"message":"529","line":4,"column":8,"nodeType":"525","messageId":"526","endLine":4,"endColumn":14},{"ruleId":"523","severity":1,"message":"527","line":5,"column":8,"nodeType":"525","messageId":"526","endLine":5,"endColumn":12},{"ruleId":"523","severity":1,"message":"530","line":6,"column":8,"nodeType":"525","messageId":"526","endLine":6,"endColumn":18},{"ruleId":"523","severity":1,"message":"531","line":13,"column":10,"nodeType":"525","messageId":"526","endLine":13,"endColumn":18},{"ruleId":"523","severity":1,"message":"532","line":14,"column":10,"nodeType":"525","messageId":"526","endLine":14,"endColumn":12},{"ruleId":"523","severity":1,"message":"533","line":17,"column":8,"nodeType":"525","messageId":"526","endLine":17,"endColumn":17},{"ruleId":"523","severity":1,"message":"527","line":2,"column":8,"nodeType":"525","messageId":"526","endLine":2,"endColumn":12},{"ruleId":"523","severity":1,"message":"553","line":1,"column":8,"nodeType":"525","messageId":"526","endLine":1,"endColumn":13},{"ruleId":"523","severity":1,"message":"551","line":31,"column":12,"nodeType":"525","messageId":"526","endLine":31,"endColumn":16},{"ruleId":"523","severity":1,"message":"547","line":6,"column":8,"nodeType":"525","messageId":"526","endLine":6,"endColumn":11},{"ruleId":"523","severity":1,"message":"534","line":6,"column":10,"nodeType":"525","messageId":"526","endLine":6,"endColumn":15},{"ruleId":"523","severity":1,"message":"535","line":27,"column":9,"nodeType":"525","messageId":"526","endLine":27,"endColumn":15},{"ruleId":"523","severity":1,"message":"533","line":6,"column":8,"nodeType":"525","messageId":"526","endLine":6,"endColumn":17},{"ruleId":"523","severity":1,"message":"536","line":68,"column":7,"nodeType":"525","messageId":"526","endLine":68,"endColumn":17},{"ruleId":"537","severity":1,"message":"538","line":74,"column":25,"nodeType":"539","messageId":"540","endLine":74,"endColumn":27},{"ruleId":"523","severity":1,"message":"541","line":75,"column":9,"nodeType":"525","messageId":"526","endLine":75,"endColumn":14},{"ruleId":"523","severity":1,"message":"535","line":76,"column":9,"nodeType":"525","messageId":"526","endLine":76,"endColumn":15},{"ruleId":"523","severity":1,"message":"542","line":87,"column":19,"nodeType":"525","messageId":"526","endLine":87,"endColumn":34},{"ruleId":"543","severity":1,"message":"544","line":255,"column":3,"nodeType":"545","messageId":"546","endLine":255,"endColumn":8},{"ruleId":"523","severity":1,"message":"536","line":33,"column":7,"nodeType":"525","messageId":"526","endLine":33,"endColumn":17},{"ruleId":"537","severity":1,"message":"538","line":39,"column":25,"nodeType":"539","messageId":"540","endLine":39,"endColumn":27},{"ruleId":"523","severity":1,"message":"541","line":40,"column":9,"nodeType":"525","messageId":"526","endLine":40,"endColumn":14},{"ruleId":"523","severity":1,"message":"535","line":41,"column":9,"nodeType":"525","messageId":"526","endLine":41,"endColumn":15},{"ruleId":"523","severity":1,"message":"542","line":51,"column":19,"nodeType":"525","messageId":"526","endLine":51,"endColumn":34},{"ruleId":"523","severity":1,"message":"550","line":52,"column":24,"nodeType":"525","messageId":"526","endLine":52,"endColumn":40},{"ruleId":"543","severity":1,"message":"544","line":192,"column":3,"nodeType":"545","messageId":"546","endLine":192,"endColumn":8},{"ruleId":"523","severity":1,"message":"552","line":32,"column":21,"nodeType":"525","messageId":"526","endLine":32,"endColumn":32},"no-native-reassign",["556"],"no-negated-in-lhs",["557"],"no-unused-vars","'d' is assigned a value but never used.","Identifier","unusedVar","'Bar2' is defined but never used.","'parent' is assigned a value but never used.","'Button' is defined but never used.","'SortChart2' is defined but never used.","'newTrace' is defined but never used.","'Sd' is defined but never used.","'SortInfoP' is defined but never used.","'psudo' is defined but never used.","'height' is assigned a value but never used.","'classNames' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'width' is assigned a value but never used.","'classNamesPivot' is assigned a value but never used.","no-dupe-keys","Duplicate key 'title'.","ObjectExpression","unexpected","'Bar' is defined but never used.",["556"],["557"],"'classNamesMemory' is assigned a value but never used.","'br22' is defined but never used.","'classNames1' is assigned a value but never used.","'React' is defined but never used.",["556"],["557"],"no-global-assign","no-unsafe-negation"]