{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSE499A\\\\al-khwarizmi\\\\src\\\\components\\\\Khwarizmi\\\\index.js\";\nimport React, { Component } from 'react';\nimport './style.css';\nimport Controls from '../Controls';\nimport TopBar from '../TopBar';\nimport Drawer from '../Drawer';\nimport SortVisualizer from '../SortVisualizer';\nimport { BubbleSort, BubbleSortKey, BubbleSortDesc } from '../algorithms/BubbleSort';\nimport DataTable from '../DataTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Khwarizmi extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      array: [],\n      arraySize: 10,\n      trace: [],\n      algorithm: null,\n      appDrawerOpen: false\n    };\n    this.ALGORITHM = {\n      'Bubble Sort': BubbleSort\n    };\n    this.ALGORITHM_KEY = {\n      'Bubble Sort': BubbleSortKey\n    };\n    this.ALGORITHM_DESC = {\n      'Bubble Sort': BubbleSortDesc\n    };\n\n    this.generateRandomArray = () => {\n      // Generate pseudo-random number between 1 and max\n      function getRandomInt(max) {\n        return Math.floor(Math.random() * Math.floor(max)) + 1;\n      } // Generate an array of length max\n\n\n      const array = Array(this.state.arraySize).fill(0).map(() => getRandomInt(this.state.arraySize * 5));\n      this.setState({\n        array,\n        trace: []\n      }, this.createTrace);\n    };\n\n    this.handleAlgorithmChange = algorithm => {\n      this.setState({\n        algorithm\n      }, this.generateRandomArray);\n    };\n\n    this.handleArraySizeChange = size => {\n      size = Number(size);\n      size = size > 100 ? 100 : size;\n      size = size < 0 ? 0 : size;\n      this.setState({\n        arraySize: size\n      }, this.generateRandomArray);\n    };\n\n    this.createTrace = () => {\n      const numbers = [...this.state.array];\n      const sort = this.ALGORITHM[this.state.algorithm];\n\n      if (sort) {\n        const trace = sort(numbers);\n        this.setState({\n          trace\n        });\n      }\n    };\n\n    this.toggleDrawer = () => {\n      this.setState(prevState => ({\n        drawerOpen: !prevState.drawerOpen\n      }));\n    };\n  }\n\n  componentDidMount() {\n    this.generateRandomArray();\n  }\n\n  render() {\n    let theme = `Khwarizmi`;\n    if (this.state.drawerOpen) theme += ` Khwarizmi_modal_open`;\n    const colorKey = this.ALGORITHM_KEY[this.state.algorithm];\n    const desc = this.ALGORITHM_DESC[this.state.algorithm];\n\n    const table = /*#__PURE__*/_jsxDEV(DataTable, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this);\n\n    const controls = /*#__PURE__*/_jsxDEV(Controls, {\n      onGenerateRandomArray: this.generateRandomArray,\n      algorithm: this.state.algorithm,\n      onAlgorithmChange: this.handleAlgorithmChange,\n      arraySize: this.state.arraySize,\n      onArraySizeChange: this.handleArraySizeChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: theme,\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {\n        drawerOpen: this.state.drawerOpen,\n        toggleDrawer: this.toggleDrawer,\n        children: controls\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n        open: this.state.drawerOpen,\n        closeDrawer: this.toggleDrawer,\n        children: controls\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"Khwarizmi__Body\",\n        children: /*#__PURE__*/_jsxDEV(SortVisualizer, {\n          array: this.state.array,\n          trace: this.state.trace,\n          colorKey: colorKey,\n          desc: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Khwarizmi;","map":{"version":3,"sources":["D:/CSE499A/al-khwarizmi/src/components/Khwarizmi/index.js"],"names":["React","Component","Controls","TopBar","Drawer","SortVisualizer","BubbleSort","BubbleSortKey","BubbleSortDesc","DataTable","Khwarizmi","state","array","arraySize","trace","algorithm","appDrawerOpen","ALGORITHM","ALGORITHM_KEY","ALGORITHM_DESC","generateRandomArray","getRandomInt","max","Math","floor","random","Array","fill","map","setState","createTrace","handleAlgorithmChange","handleArraySizeChange","size","Number","numbers","sort","toggleDrawer","prevState","drawerOpen","componentDidMount","render","theme","colorKey","desc","table","controls"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\nimport Controls from '../Controls';\r\nimport TopBar from '../TopBar';\r\nimport Drawer from '../Drawer';\r\nimport SortVisualizer from '../SortVisualizer';\r\n\r\n\r\nimport { BubbleSort, BubbleSortKey,  BubbleSortDesc } from '../algorithms/BubbleSort'\r\nimport DataTable from '../DataTable';\r\n\r\nclass Khwarizmi extends Component {\r\n  state = {\r\n    array: [],\r\n    arraySize: 10,\r\n    trace: [],\r\n    algorithm: null,\r\n    appDrawerOpen: false\r\n  };\r\n\r\n  ALGORITHM = {\r\n    'Bubble Sort': BubbleSort,\r\n  };\r\n\r\n  ALGORITHM_KEY = {\r\n    'Bubble Sort': BubbleSortKey\r\n  };\r\n\r\n  ALGORITHM_DESC = {\r\n    'Bubble Sort': BubbleSortDesc\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.generateRandomArray();\r\n  }\r\n\r\n  generateRandomArray = () => {\r\n    // Generate pseudo-random number between 1 and max\r\n    function getRandomInt(max) {\r\n      return Math.floor(Math.random() * Math.floor(max)) + 1;\r\n    }\r\n\r\n    // Generate an array of length max\r\n    const array = Array(this.state.arraySize)\r\n      .fill(0)\r\n      .map(() => getRandomInt(this.state.arraySize * 5));\r\n\r\n    this.setState(\r\n      {\r\n        array,\r\n        trace: []\r\n      },\r\n      this.createTrace\r\n    );\r\n  };\r\n\r\n  handleAlgorithmChange = (algorithm) => {\r\n    this.setState({ algorithm }, this.generateRandomArray);\r\n  };\r\n\r\n  handleArraySizeChange = (size) => {\r\n    size = Number(size);\r\n    size = size > 100 ? 100 : size;\r\n    size = size < 0 ? 0 : size;\r\n    this.setState({ arraySize: size }, this.generateRandomArray);\r\n  };\r\n\r\n  createTrace = () => {\r\n    const numbers = [...this.state.array];\r\n    const sort = this.ALGORITHM[this.state.algorithm];\r\n    if (sort) {\r\n      const trace = sort(numbers);\r\n      this.setState({ trace });\r\n    }\r\n  };\r\n\r\n  toggleDrawer = () => {\r\n    this.setState((prevState) => ({\r\n      drawerOpen: !prevState.drawerOpen\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    let theme = `Khwarizmi`;\r\n    if (this.state.drawerOpen) theme += ` Khwarizmi_modal_open`;\r\n\r\n    const colorKey = this.ALGORITHM_KEY[this.state.algorithm];\r\n    const desc = this.ALGORITHM_DESC[this.state.algorithm];\r\n\r\n    const table = (\r\n      <DataTable />\r\n    );\r\n\r\n    const controls = (\r\n\r\n\r\n      <Controls\r\n        onGenerateRandomArray={this.generateRandomArray}\r\n        algorithm={this.state.algorithm}\r\n        onAlgorithmChange={this.handleAlgorithmChange}\r\n        arraySize={this.state.arraySize}\r\n        onArraySizeChange={this.handleArraySizeChange}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div className={theme}>\r\n        <TopBar\r\n          drawerOpen={this.state.drawerOpen}\r\n          toggleDrawer={this.toggleDrawer}\r\n        >\r\n          {controls}\r\n        </TopBar>\r\n\r\n        <Drawer\r\n          open={this.state.drawerOpen}\r\n          closeDrawer={this.toggleDrawer}\r\n        >\r\n          {controls}\r\n        </Drawer>\r\n\r\n        <main className=\"Khwarizmi__Body\">\r\n          <SortVisualizer\r\n            array={this.state.array}\r\n            trace={this.state.trace}\r\n            colorKey={colorKey}\r\n            desc={desc}\r\n          />\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Khwarizmi;"]},"metadata":{},"sourceType":"module"}