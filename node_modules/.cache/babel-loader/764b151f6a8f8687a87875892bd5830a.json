{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSE499A\\\\al-khwarizmi\\\\src\\\\components\\\\floor\\\\SortVisualizer\\\\index.js\";\nimport React, { Component } from 'react';\nimport './style.css'; // Sub components\n\nimport Bar2 from '../../celling/Bar2';\nimport SortChart2 from '../SortChart2';\nimport SortChart1 from '../SortChart1';\nimport SortChart from '../SortChart';\nimport VisualizerControls from '../../middle/VisualizerControls';\nimport ProgressBar from '../../middle/ProgressBar';\nimport ColorKey from '../../celling/ColorKey';\nimport SortInfo from '../SortInfo';\nimport { array } from 'yargs';\nimport { newTrace } from '../../../algorithms/helpers';\nimport { Sd } from '../Sd/sd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SortVisualizer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      trace: [],\n      traceStep: -1,\n      originalArray: [],\n      array: [],\n      groupA: [],\n      groupB: [],\n      groupC: [],\n      groupD: [],\n      sortedIndices: [],\n      timeoutIds: [],\n      playbackSpeed: 1\n    };\n\n    this._reset = array => {\n      this.setState({\n        array,\n        trace: [],\n        traceStep: -1,\n        groupA: [],\n        groupB: [],\n        groupC: [],\n        groupD: [],\n        sortedIndices: [],\n        originalArray: [...array]\n      });\n    };\n\n    this.clearTimeouts = () => {\n      this.state.timeoutIds.forEach(timeoutId => clearTimeout(timeoutId));\n      this.setState({\n        timeoutIds: []\n      });\n    };\n\n    this._changeVisualState = visualState => {\n      this.setState({\n        array: visualState.array,\n        groupA: visualState.groupA,\n        groupB: visualState.groupB,\n        groupC: visualState.groupC,\n        groupD: visualState.groupD,\n        sortedIndices: visualState.sortedIndices\n      });\n    };\n\n    this.run = trace => {\n      const timeoutIds = [];\n      const timer = 250 / this.state.playbackSpeed; // Set a timeout for each item in the trace\n\n      trace.forEach((item, i) => {\n        let timeoutId = setTimeout(item => {\n          this.setState(prevState => ({\n            traceStep: prevState.traceStep + 1\n          }), this._changeVisualState(item));\n        }, i * timer, item);\n        timeoutIds.push(timeoutId);\n      }); // Clear timeouts upon completion\n\n      let timeoutId = setTimeout(this.clearTimeouts, trace.length * timer);\n      timeoutIds.push(timeoutId);\n      this.setState({\n        timeoutIds\n      });\n    };\n\n    this.pause = () => {\n      this.clearTimeouts();\n    };\n\n    this.continue = () => {\n      const trace = this.state.trace.slice(this.state.traceStep);\n      this.run(trace);\n    };\n\n    this.stepForward = () => {\n      const trace = this.state.trace;\n      const step = this.state.traceStep;\n\n      if (step < trace.length - 1) {\n        const item = trace[step + 1];\n        this.setState({\n          traceStep: step + 1\n        }, this._changeVisualState(item));\n      }\n    };\n\n    this.stepBackward = () => {\n      const trace = this.state.trace;\n      const step = this.state.traceStep;\n\n      if (step > 0) {\n        const item = trace[step - 1];\n        this.setState({\n          traceStep: step - 1\n        }, this._changeVisualState(item));\n      }\n    };\n\n    this.repeat = () => {\n      this.clearTimeouts();\n      this.setState(prevState => ({\n        array: [...prevState.originalArray],\n        traceStep: -1,\n        comparing: [],\n        compared: [],\n        sorted: []\n      }));\n      this.run(this.state.trace);\n    };\n\n    this.adjustPlaybackSpeed = speed => {\n      const playing = this.state.timeoutIds.length > 0;\n      this.pause();\n      const playbackSpeed = Number(speed.split('x')[0]);\n      this.setState({\n        playbackSpeed\n      }, () => {\n        if (playing) this.continue();\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.array !== this.props.array) {\n      this._reset(this.props.array);\n    }\n\n    if (prevProps.trace !== this.props.trace) {\n      this.clearTimeouts();\n      this.setState({\n        trace: this.props.trace\n      });\n    }\n  } // Actions\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SortVisualizer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SVtable\",\n        children: /*#__PURE__*/_jsxDEV(SortChart1, {\n          numbers: this.state.array,\n          maxNum: Math.max(...this.state.array),\n          groupA: this.state.groupA,\n          groupB: this.state.groupB,\n          groupC: this.state.groupC,\n          groupD: this.state.groupD,\n          sortedIndices: this.state.sortedIndices,\n          tracestep: this.state.tracestep,\n          trace: this.state.trace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SortChart, {\n        numbers: this.state.array,\n        maxNum: Math.max(...this.state.array),\n        groupA: this.state.groupA,\n        groupB: this.state.groupB,\n        groupC: this.state.groupC,\n        groupD: this.state.groupD,\n        sortedIndices: this.state.sortedIndices\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"SortVisualizer__ProgressBar\",\n        children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n          width: this.state.trace.length > 0 ? this.state.traceStep / (this.state.trace.length - 1) * 100 : 0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VisualizerControls, {\n        onPlay: this.state.traceStep === -1 ? this.run.bind(this, this.state.trace) : this.continue.bind(this),\n        onPause: this.pause.bind(this),\n        onForward: this.stepForward.bind(this),\n        onBackward: this.stepBackward.bind(this),\n        onRepeat: this.repeat.bind(this),\n        onAdjustSpeed: this.adjustPlaybackSpeed,\n        playing: this.state.timeoutIds.length > 0,\n        playDisabled: this.state.traceStep >= this.state.trace.length - 1 && this.state.traceStep !== -1 || this.state.trace.length <= 0,\n        forwardDisabled: this.state.traceStep >= this.state.trace.length - 1,\n        backwardDisabled: this.state.traceStep <= 0,\n        repeatDisabled: this.state.traceStep <= 0,\n        playbackSpeed: this.state.playbackSpeed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Bar2, {\n        stateA: this.state.groupA.includes(TrackEvent),\n        stateB: this.state.groupB.includes(TrackEvent),\n        stateC: this.state.groupC.includes(TrackEvent),\n        stateD: this.state.groupD.includes(TrackEvent),\n        sorted: this.state.sortedIndices.includes(TrackEvent)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(ColorKey, { ...this.props.colorKey\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SortInfo, { ...this.props.desc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default SortVisualizer;","map":{"version":3,"sources":["D:/CSE499A/al-khwarizmi/src/components/floor/SortVisualizer/index.js"],"names":["React","Component","Bar2","SortChart2","SortChart1","SortChart","VisualizerControls","ProgressBar","ColorKey","SortInfo","array","newTrace","Sd","SortVisualizer","state","trace","traceStep","originalArray","groupA","groupB","groupC","groupD","sortedIndices","timeoutIds","playbackSpeed","_reset","setState","clearTimeouts","forEach","timeoutId","clearTimeout","_changeVisualState","visualState","run","timer","item","i","setTimeout","prevState","push","length","pause","continue","slice","stepForward","step","stepBackward","repeat","comparing","compared","sorted","adjustPlaybackSpeed","speed","playing","Number","split","componentDidUpdate","prevProps","props","render","Math","max","tracestep","bind","includes","TrackEvent","colorKey","desc"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport './style.css';\r\n\r\n// Sub components\r\nimport Bar2 from '../../celling/Bar2';\r\nimport SortChart2 from '../SortChart2';\r\nimport SortChart1 from '../SortChart1';\r\nimport SortChart from '../SortChart';\r\nimport VisualizerControls from '../../middle/VisualizerControls';\r\nimport ProgressBar from '../../middle/ProgressBar';\r\nimport ColorKey from '../../celling/ColorKey';\r\nimport SortInfo from '../SortInfo';\r\nimport { array } from 'yargs';\r\nimport { newTrace } from '../../../algorithms/helpers';\r\nimport { Sd } from '../Sd/sd';\r\n\r\nclass SortVisualizer extends Component {\r\n  state = {\r\n    trace: [],\r\n    traceStep: -1,\r\n\r\n    originalArray: [],\r\n    array: [],\r\n    groupA: [],\r\n    groupB: [],\r\n    groupC: [],\r\n    groupD: [],\r\n    sortedIndices: [],\r\n\r\n    timeoutIds: [],\r\n    playbackSpeed: 1\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.array !== this.props.array) {\r\n      this._reset(this.props.array);\r\n    }\r\n    if (prevProps.trace !== this.props.trace) {\r\n      this.clearTimeouts();\r\n      this.setState({ trace: this.props.trace });\r\n    }\r\n  }\r\n\r\n  // Actions\r\n\r\n  _reset = (array) => {\r\n    this.setState({\r\n      array,\r\n      trace: [],\r\n      traceStep: -1,\r\n      groupA: [],\r\n      groupB: [],\r\n      groupC: [],\r\n      groupD: [],\r\n      sortedIndices: [],\r\n      originalArray: [...array]\r\n    });\r\n  };\r\n\r\n  clearTimeouts = () => {\r\n    this.state.timeoutIds.forEach((timeoutId) =>\r\n      clearTimeout(timeoutId)\r\n    );\r\n    this.setState({ timeoutIds: [] });\r\n  };\r\n\r\n  _changeVisualState = (visualState) => {\r\n    this.setState({\r\n      array: visualState.array,\r\n      groupA: visualState.groupA,\r\n      groupB: visualState.groupB,\r\n      groupC: visualState.groupC,\r\n      groupD: visualState.groupD,\r\n      sortedIndices: visualState.sortedIndices\r\n    });\r\n  };\r\n\r\n  run = (trace) => {\r\n    const timeoutIds = [];\r\n    const timer = 250 / this.state.playbackSpeed;\r\n\r\n    // Set a timeout for each item in the trace\r\n    trace.forEach((item, i) => {\r\n      let timeoutId = setTimeout(\r\n        (item) => {\r\n          this.setState(\r\n            (prevState) => ({\r\n              traceStep: prevState.traceStep + 1\r\n            }),\r\n            this._changeVisualState(item)\r\n          );\r\n        },\r\n        i * timer,\r\n        item\r\n      );\r\n\r\n      timeoutIds.push(timeoutId);\r\n    });\r\n\r\n    // Clear timeouts upon completion\r\n    let timeoutId = setTimeout(\r\n      this.clearTimeouts,\r\n      trace.length * timer\r\n    );\r\n    timeoutIds.push(timeoutId);\r\n\r\n    this.setState({ timeoutIds });\r\n  };\r\n\r\n  pause = () => {\r\n    this.clearTimeouts();\r\n  };\r\n\r\n  continue = () => {\r\n    const trace = this.state.trace.slice(this.state.traceStep);\r\n    this.run(trace);\r\n  };\r\n\r\n  stepForward = () => {\r\n    const trace = this.state.trace;\r\n    const step = this.state.traceStep;\r\n    if (step < trace.length - 1) {\r\n      const item = trace[step + 1];\r\n      this.setState(\r\n        { traceStep: step + 1 },\r\n        this._changeVisualState(item)\r\n      );\r\n    }\r\n  };\r\n\r\n  stepBackward = () => {\r\n    const trace = this.state.trace;\r\n    const step = this.state.traceStep;\r\n    if (step > 0) {\r\n      const item = trace[step - 1];\r\n      this.setState(\r\n        { traceStep: step - 1 },\r\n        this._changeVisualState(item)\r\n      );\r\n    }\r\n  };\r\n\r\n  repeat = () => {\r\n    this.clearTimeouts();\r\n    this.setState((prevState) => ({\r\n      array: [...prevState.originalArray],\r\n      traceStep: -1,\r\n      comparing: [],\r\n      compared: [],\r\n      sorted: []\r\n    }));\r\n    this.run(this.state.trace);\r\n  };\r\n\r\n  adjustPlaybackSpeed = (speed) => {\r\n    const playing = this.state.timeoutIds.length > 0;\r\n    this.pause();\r\n    const playbackSpeed = Number(speed.split('x')[0]);\r\n    this.setState({ playbackSpeed }, () => {\r\n      if (playing) this.continue();\r\n    });\r\n  };\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"SortVisualizer\">\r\n        <div className=\"SVtable\">\r\n        <SortChart1\r\n          numbers={this.state.array}\r\n          maxNum={Math.max(...this.state.array)}\r\n          groupA={this.state.groupA}\r\n          groupB={this.state.groupB}\r\n          groupC={this.state.groupC}\r\n          groupD={this.state.groupD}\r\n          sortedIndices={this.state.sortedIndices}\r\n          tracestep={this.state.tracestep}\r\n          trace={this.state.trace}\r\n        />\r\n      \r\n        </div>\r\n        \r\n        <SortChart\r\n          numbers={this.state.array}\r\n          maxNum={Math.max(...this.state.array)}\r\n          groupA={this.state.groupA}\r\n          groupB={this.state.groupB}\r\n          groupC={this.state.groupC}\r\n          groupD={this.state.groupD}\r\n          sortedIndices={this.state.sortedIndices}\r\n        />\r\n\r\n     \r\n        <div className=\"SortVisualizer__ProgressBar\">\r\n          <ProgressBar\r\n            width={\r\n              this.state.trace.length > 0\r\n                ? (this.state.traceStep /\r\n                    (this.state.trace.length - 1)) *\r\n                  100\r\n                : 0\r\n            }\r\n          />\r\n        </div>\r\n\r\n        <VisualizerControls\r\n          onPlay={\r\n            this.state.traceStep === -1\r\n              ? this.run.bind(this, this.state.trace)\r\n              : this.continue.bind(this)\r\n          }\r\n          onPause={this.pause.bind(this)}\r\n          onForward={this.stepForward.bind(this)}\r\n          onBackward={this.stepBackward.bind(this)}\r\n          onRepeat={this.repeat.bind(this)}\r\n          onAdjustSpeed={this.adjustPlaybackSpeed}\r\n          playing={this.state.timeoutIds.length > 0}\r\n          playDisabled={\r\n            (this.state.traceStep >= this.state.trace.length - 1 &&\r\n              this.state.traceStep !== -1) ||\r\n            this.state.trace.length <= 0\r\n          }\r\n          forwardDisabled={\r\n            this.state.traceStep >= this.state.trace.length - 1\r\n          }\r\n          backwardDisabled={this.state.traceStep <= 0}\r\n          repeatDisabled={this.state.traceStep <= 0}\r\n          playbackSpeed={this.state.playbackSpeed}\r\n        />\r\n    \r\n\r\n\r\n\r\n              <Bar2\r\n        \r\n        \r\n        stateA={this.state.groupA.includes(TrackEvent)}\r\n        stateB={this.state.groupB.includes(TrackEvent)}\r\n        stateC={this.state.groupC.includes(TrackEvent)}\r\n        stateD={this.state.groupD.includes(TrackEvent)}\r\n        sorted={this.state.sortedIndices.includes(TrackEvent)}\r\n        \r\n      />\r\n\r\n        <ColorKey {...this.props.colorKey} />\r\n\r\n        <SortInfo {...this.props.desc} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SortVisualizer;\r\n"]},"metadata":{},"sourceType":"module"}