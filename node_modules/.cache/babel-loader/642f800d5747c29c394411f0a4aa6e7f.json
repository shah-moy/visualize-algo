{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSE499B\\\\visualize-algo\\\\src\\\\components\\\\floor\\\\SortChart\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport Bar from '../../celling/Bar';\nimport SortInfoP from '../SortInfoP';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getListOfBars = (numbers, maxNum, groupA, groupB, groupC, groupD, sortedIndices) => {\n  return numbers.map((num, i) => {\n    let width = 100 / numbers.length;\n    let height = num / maxNum * 100;\n    let stateA = groupA.includes(i);\n    let stateB = groupB.includes(i);\n    let stateC = groupC.includes(i);\n    let stateD = groupD.includes(i);\n    let sorted = sortedIndices.includes(i);\n    let margin = i === numbers.length ? '0' : width > 3 ? '0.5rem' : '0.125rem';\n    return /*#__PURE__*/_jsxDEV(Bar, {\n      width: width,\n      height: height,\n      val: width > 4 ? num : null,\n      stateA: stateA,\n      stateB: stateB,\n      stateC: stateC,\n      stateD: stateD,\n      sorted: sorted,\n      style: {\n        marginRight: `${margin}`\n      }\n    }, `${i}_${num}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  });\n};\n\nconst SortChartR = (numbers, maxNum, groupA, groupB, groupC, groupD, sortedIndices, l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10) => {\n  let classNames = 'SortChartR';\n  let classNamesC = 'SortChartR';\n  let classNamesSW = 'SortChartR';\n  let classNamesSR = 'SortChartR';\n  let classNamesPivot = 'SortChartR';\n  let classNamesMemory = 'SortChartR';\n  numbers.map((num, i) => {\n    let width = 100 / numbers.length;\n    let height = num / maxNum * 100;\n    let stateA = groupA.includes(i);\n    let stateB = groupB.includes(i);\n    let stateC = groupC.includes(i);\n    let stateD = groupD.includes(i);\n    let sorted = sortedIndices.includes(i);\n\n    if (sorted) {\n      classNamesSR += ' P_sorted';\n    }\n\n    if (stateD) classNamesPivot += ' P_stateD';else if (stateC) classNamesMemory += ' P_stateC';else if (stateB) {\n      classNamesSW += ' P_stateB';\n      classNamesSR += 'P_default';\n    } else if (stateA) {\n      classNamesC += ' Bar_stateA';\n      classNamesSR += 'P_default';\n    }\n  });\n  return (\n    /*#__PURE__*/\n\n    /*\r\n      <div className=\"SortChartR\" Style=\"text-align:left\" > \r\n      <div id=\"screen\" Style=\"margin: 15px\">\r\n     \r\n            do <br/> \r\n            <span className={classNames} Style=\"margin-left:20px\">\r\n            swapped = false <br/>\r\n              </span><br/>\r\n        <span id=\"change\" Style=\"margin-left:40px\" >\r\n          for i = 1 to indexOfLastUnsortedElement-1<br/>\r\n        </span><br/>\r\n        <span className={classNamesC}  Style=\"margin-left:60px\">\r\n         if leftElement > rightElement\r\n         <br/>\r\n        </span><br/>\r\n        <span className={classNamesSW} Style=\"margin-left:60px\">\r\n            swap(leftElement, rightElement) <br/> </span><br/>\r\n        <span className={classNamesSR} Style=\"margin-left:10px\">\r\n            swapped = true <br/>\r\n        </span><br/>\r\n        <span id=\"change\"> {title ? title : 'while swapped'} </span>\r\n        </div></div>*/\n    _jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: l0\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: l1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: [\"   \", l2, \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"code\", {\n          className: classNamesC,\n          children: l3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          className: classNamesSW,\n          children: l4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          className: classNamesSW,\n          children: l5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"code\", {\n          className: classNamesSR || classNamesMemory,\n          children: l6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n          className: classNamesMemory,\n          children: l10\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: l7\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: l8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: l9\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 1\n    }, this)\n  );\n};\n\n_c = SortChartR;\n\nconst SortChart = ({\n  numbers,\n  maxNum,\n  groupA,\n  groupB,\n  groupC,\n  groupD,\n  sortedIndices,\n  l0,\n  l1,\n  l2,\n  l3,\n  l4,\n  l5,\n  l6,\n  l7,\n  l8,\n  l9,\n  l10\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SortChart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SortChartL\",\n      children: getListOfBars(numbers, maxNum, groupA, groupB, groupC, groupD, sortedIndices)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"SortChartR\",\n      children: SortChartR(numbers, maxNum, groupA, groupB, groupC, groupD, sortedIndices, l0, l1, l2, l3, l4, l5, l6, l7, l8, l9, l10)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = SortChart;\nSortChart.propTypes = {\n  l0: PropTypes.string,\n  l1: PropTypes.string,\n  l2: PropTypes.object,\n  l3: PropTypes.object,\n  l4: PropTypes.string,\n  l5: PropTypes.string,\n  l6: PropTypes.string,\n  l7: PropTypes.string,\n  l8: PropTypes.object,\n  l9: PropTypes.object,\n  l10: PropTypes.string,\n  title: PropTypes.string,\n  numbers: PropTypes.arrayOf(PropTypes.number),\n  maxNum: PropTypes.number,\n  title: PropTypes.string,\n  groupA: PropTypes.arrayOf(PropTypes.number),\n  groupB: PropTypes.arrayOf(PropTypes.number),\n  groupC: PropTypes.arrayOf(PropTypes.number),\n  groupD: PropTypes.arrayOf(PropTypes.number),\n  sortedIndices: PropTypes.arrayOf(PropTypes.number)\n};\nexport default SortChart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SortChartR\");\n$RefreshReg$(_c2, \"SortChart\");","map":{"version":3,"sources":["D:/CSE499B/visualize-algo/src/components/floor/SortChart/index.js"],"names":["React","PropTypes","Bar","SortInfoP","getListOfBars","numbers","maxNum","groupA","groupB","groupC","groupD","sortedIndices","map","num","i","width","length","height","stateA","includes","stateB","stateC","stateD","sorted","margin","marginRight","SortChartR","l0","l1","l2","l3","l4","l5","l6","l7","l8","l9","l10","classNames","classNamesC","classNamesSW","classNamesSR","classNamesPivot","classNamesMemory","SortChart","propTypes","string","object","title","arrayOf","number"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nimport Bar from '../../celling/Bar';\r\nimport SortInfoP from '../SortInfoP';\r\n \r\nconst getListOfBars = (\r\n  numbers,\r\n  maxNum,\r\n  groupA,\r\n  groupB,\r\n  groupC,\r\n  groupD,\r\n  sortedIndices\r\n) => {\r\n  return numbers.map((num, i) => {\r\n    let width = 100 / numbers.length;\r\n    let height = (num / maxNum) * 100;\r\n    let stateA = groupA.includes(i);\r\n    let stateB = groupB.includes(i);\r\n    let stateC = groupC.includes(i);\r\n    let stateD = groupD.includes(i);\r\n    let sorted = sortedIndices.includes(i);\r\n\r\n    let margin =\r\n      i === numbers.length ? '0' : width > 3 ? '0.5rem' : '0.125rem';\r\n    return (\r\n      <Bar\r\n        key={`${i}_${num}`}\r\n        width={width}\r\n        height={height}\r\n        val={width > 4 ? num : null}\r\n        stateA={stateA}\r\n        stateB={stateB}\r\n        stateC={stateC}\r\n        stateD={stateD}\r\n        sorted={sorted}\r\n        style={{ marginRight: `${margin}` }}\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\n\r\nconst SortChartR = (\r\n  numbers,\r\n  maxNum,\r\n  groupA,\r\n  groupB,\r\n  groupC,\r\n  groupD,\r\n  sortedIndices,\r\n l0,\r\n  l1,\r\n  l2,\r\n  l3,\r\n  l4,\r\n  l5,\r\n  l6,\r\n  l7,\r\n  l8,\r\n  l9,\r\n  l10,\r\n  \r\n) => {\r\n\r\n  let classNames = 'SortChartR';\r\n  let classNamesC = 'SortChartR';\r\n  let classNamesSW = 'SortChartR';\r\n  let classNamesSR = 'SortChartR';\r\n  let classNamesPivot = 'SortChartR';\r\n  let classNamesMemory = 'SortChartR';\r\n   numbers.map((num, i) => {\r\n    let width = 100 / numbers.length;\r\n    let height = (num / maxNum) * 100;\r\n    let stateA = groupA.includes(i);\r\n    let stateB = groupB.includes(i);\r\n    let stateC = groupC.includes(i);\r\n    let stateD = groupD.includes(i);\r\n    let sorted = sortedIndices.includes(i);\r\n\r\n      \r\n      if (sorted){ classNamesSR += ' P_sorted';\r\n   }\r\n      \r\n      if (stateD) classNamesPivot += ' P_stateD';\r\n      else if (stateC) classNamesMemory += ' P_stateC';\r\n      else if (stateB){ classNamesSW += ' P_stateB';\r\n      classNamesSR += 'P_default';\r\n    }\r\n      else if (stateA) {classNamesC += ' Bar_stateA';\r\n      classNamesSR += 'P_default';\r\n    }\r\n\r\n    } );\r\n\r\n\r\n\r\n    \r\nreturn(\r\n  /*\r\n    <div className=\"SortChartR\" Style=\"text-align:left\" > \r\n    <div id=\"screen\" Style=\"margin: 15px\">\r\n   \r\n          do <br/> \r\n          <span className={classNames} Style=\"margin-left:20px\">\r\n          swapped = false <br/>\r\n            </span><br/>\r\n      <span id=\"change\" Style=\"margin-left:40px\" >\r\n        for i = 1 to indexOfLastUnsortedElement-1<br/>\r\n      </span><br/>\r\n      <span className={classNamesC}  Style=\"margin-left:60px\">\r\n       if leftElement > rightElement\r\n       <br/>\r\n      </span><br/>\r\n      <span className={classNamesSW} Style=\"margin-left:60px\">\r\n          swap(leftElement, rightElement) <br/> </span><br/>\r\n      <span className={classNamesSR} Style=\"margin-left:10px\">\r\n          swapped = true <br/>\r\n      </span><br/>\r\n      <span id=\"change\"> {title ? title : 'while swapped'} </span>\r\n\r\n    </div></div>*/\r\n<div>\r\n<td><code>{l0}</code></td><br/>\r\n    <td>\r\n   <code>{l1}</code>\r\n  </td>\r\n  <br/>\r\n  <td>\r\n    <code >   {l2}  </code>\r\n  </td>\r\n  <br/>\r\n  <td>\r\n    <code  className={classNamesC}>{l3}</code>\r\n    <br/>\r\n  </td>\r\n  <br/>\r\n  <td>\r\n    \r\n    <code className={classNamesSW}>{l4}</code>\r\n  </td>\r\n\r\n<br/>\r\n<td>\r\n    \r\n    <code className={classNamesSW}>{l5}</code>\r\n  </td>\r\n\r\n<br/>\r\n  <td>\r\n    <code className={classNamesSR || classNamesMemory} >{l6}</code>\r\n  <code className={classNamesMemory}>{l10}</code>\r\n  </td><br/>\r\n  <td>\r\n  <code>{l7}</code></td><br/>\r\n  <td>\r\n  <code>{l8}</code></td><br/>\r\n  <td>\r\n  \r\n  <code>{l9}</code></td><br/>\r\n  \r\n\r\n</div>\r\n\r\n    \r\n)\r\n  \r\n  \r\n};\r\n\r\n\r\n\r\nconst SortChart = ({\r\n  numbers,\r\n  maxNum,\r\n  groupA,\r\n  groupB,\r\n  groupC,\r\n  groupD,\r\n  sortedIndices,\r\n  l0,\r\n  l1,\r\n  l2,\r\n  l3,\r\n  l4,\r\n  l5,\r\n  l6,\r\n  l7,\r\n  l8,\r\n  l9,\r\n  l10,\r\n  \r\n}) => {\r\n  return (\r\n    <div className=\"SortChart\">\r\n      <div className='SortChartL'>{getListOfBars(\r\n        numbers,\r\n        maxNum,\r\n        groupA,\r\n        groupB,\r\n        groupC,\r\n        groupD,\r\n        sortedIndices\r\n      )}</div>\r\n       <aside className=\"SortChartR\">{SortChartR(\r\n         numbers,\r\n         maxNum,\r\n         groupA,\r\n         groupB,\r\n         groupC,\r\n         groupD,\r\n         \r\n         \r\n         sortedIndices,\r\n         l0,\r\n         l1,\r\n         l2,\r\n         l3,\r\n         l4,\r\n         l5,\r\n         l6,\r\n         l7,\r\n  l8,\r\n  l9,\r\n  l10,\r\n         \r\n         \r\n       )}\r\n      \r\n       </aside>\r\n       \r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nSortChart.propTypes = {\r\n  l0: PropTypes.string,\r\n  l1: PropTypes.string,\r\n  l2: PropTypes.object,\r\n  l3: PropTypes.object,\r\n  l4: PropTypes.string,\r\n  l5: PropTypes.string,\r\n  l6: PropTypes.string,\r\n  l7: PropTypes.string,\r\n  l8: PropTypes.object,\r\n  l9: PropTypes.object,\r\n  l10: PropTypes.string,\r\n\r\n  title: PropTypes.string,\r\n  numbers: PropTypes.arrayOf(PropTypes.number),\r\n  maxNum: PropTypes.number,\r\n  title:PropTypes.string,\r\n  groupA: PropTypes.arrayOf(PropTypes.number),\r\n  groupB: PropTypes.arrayOf(PropTypes.number),\r\n  groupC: PropTypes.arrayOf(PropTypes.number),\r\n  groupD: PropTypes.arrayOf(PropTypes.number),\r\n  sortedIndices: PropTypes.arrayOf(PropTypes.number)\r\n};\r\n\r\nexport default SortChart;\r\n"]},"metadata":{},"sourceType":"module"}