{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSE499A\\\\al-khwarizmi\\\\src\\\\components\\\\bubble\\\\racingbar3.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\"; //import { select, scaleBand, scaleLinear, max} from \"d3\";\n\nimport useResizeObserver from \"./useresizeobserver5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RacingBarChart({\n  data\n}) {\n  _s();\n\n  const svgRef = useRef();\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef); // console.log(data.length);\n  // will be called initially and on every data change\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    if (!dimensions) return; // sorting the data\n    // data.sort((a, b) => b.value - a.value);\n\n    const xScale = scaleBand().domain(data.map((value, index) => index)) // [0,1,2,3,4,5]\n    .range([500, dimensions.width]); // [0, 200]\n\n    const yScale = scaleLinear().domain([0, max(data, entry => entry.value)]) // [0, 65 (example)]\n    .range([0, dimensions.height - 200]); // [0, 400 (example)]\n    // draw the bars\n\n    svg.selectAll(\".bar\").data(data, (entry, index) => entry.name).join(enter => enter.append(\"rect\")).attr(\"fill\", entr => entr.color).attr(\"class\", \"bar\").attr(\"x\", (entry, index) => xScale(index)).transition().attr(\"width\", xScale.bandwidth() / 1.4).attr(\"y\", 0).attr(\"height\", entry => yScale(entry.value)).attr(\"transform\", (entry, index) => \"rotate(180,\" + xScale(index) + `,${dimensions.height / 2.8})`); // draw the labels\n\n    svg.selectAll(\".label\").data(data, (entry, index) => entry.name).join(enter => enter.append(\"text\").attr(\"x\", (entry, index) => xScale(index) - xScale.bandwidth() / 2)).text(entry => entry.value).attr(\"class\", \"label\").attr(\"y\", entry => dimensions.height - yScale(entry.value) - 160).attr(\"height\", entry => yScale(entry.value)).transition().attr(\"x\", (entry, index) => xScale(index) - xScale.bandwidth() / 2);\n  }, [data, dimensions]); // console.log(Math.max([...data].value))\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: wrapperRef,\n    style: {\n      marginBottom: \"2rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RacingBarChart, \"6bFCyBd3HKwDD6FYD4wxcBmp2CY=\", false, function () {\n  return [useResizeObserver];\n});\n\n_c = RacingBarChart;\nexport default RacingBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"RacingBarChart\");","map":{"version":3,"sources":["D:/CSE499A/al-khwarizmi/src/components/bubble/racingbar3.js"],"names":["React","useRef","useEffect","useResizeObserver","RacingBarChart","data","svgRef","wrapperRef","dimensions","svg","select","current","xScale","scaleBand","domain","map","value","index","range","width","yScale","scaleLinear","max","entry","height","selectAll","name","join","enter","append","attr","entr","color","transition","bandwidth","text","marginBottom"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect } from \"react\";\r\n//import { select, scaleBand, scaleLinear, max} from \"d3\";\r\nimport useResizeObserver from \"./useresizeobserver5\";\r\n\r\nfunction RacingBarChart({ data }) {\r\n  const svgRef = useRef();\r\n  const wrapperRef = useRef();\r\n  const dimensions = useResizeObserver(wrapperRef);\r\n  \r\n  // console.log(data.length);\r\n  // will be called initially and on every data change\r\n  useEffect(() => {\r\n    const svg = select(svgRef.current);\r\n    if (!dimensions) return;\r\n\r\n    // sorting the data\r\n\r\n    \r\n    // data.sort((a, b) => b.value - a.value);\r\n   \r\n\r\n    \r\n    const xScale = scaleBand()\r\n     \r\n      .domain(data.map((value, index) => index)) // [0,1,2,3,4,5]\r\n      .range([500,dimensions.width]); // [0, 200]\r\n\r\n    const yScale = scaleLinear()\r\n      .domain([0, max(data, entry => entry.value)]) // [0, 65 (example)]\r\n      .range([0, dimensions.height-200]); // [0, 400 (example)]\r\n\r\n    // draw the bars\r\n    svg\r\n      .selectAll(\".bar\")\r\n      .data(data, (entry, index) => entry.name)\r\n      .join(enter =>\r\n        enter.append(\"rect\")\r\n      )\r\n      .attr(\"fill\", entr => entr.color)\r\n      .attr(\"class\", \"bar\")\r\n      .attr(\"x\", (entry, index) => xScale(index))   \r\n      .transition()\r\n      .attr(\"width\",xScale.bandwidth()/1.4)\r\n      \r\n      .attr(\"y\", 0)\r\n\r\n      .attr(\"height\", entry => yScale(entry.value))\r\n      .attr(\"transform\",(entry,index)=>\"rotate(180,\"+ xScale(index) +`,${dimensions.height/2.8})`);\r\n\r\n    // draw the labels\r\n    svg\r\n      .selectAll(\".label\")\r\n      .data(data, (entry, index) => entry.name)\r\n      .join(enter =>\r\n        enter\r\n          .append(\"text\")\r\n          .attr(\r\n            \"x\",\r\n            (entry, index) => xScale(index) -xScale.bandwidth()/2\r\n          )\r\n          \r\n      )\r\n      .text(entry =>entry.value)\r\n      .attr(\"class\", \"label\")\r\n      .attr(\"y\",  entry => dimensions.height-yScale(entry.value)-160)\r\n      .attr(\"height\", entry => yScale(entry.value))\r\n      .transition()\r\n      .attr(\"x\", (entry, index) => xScale(index)-xScale.bandwidth()/2 )\r\n      \r\n  }, [data, dimensions]);\r\n// console.log(Math.max([...data].value))\r\n  return (\r\n    <div ref={wrapperRef} style={{ marginBottom: \"2rem\" }}>\r\n         <svg ref={svgRef}></svg>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RacingBarChart;"]},"metadata":{},"sourceType":"module"}