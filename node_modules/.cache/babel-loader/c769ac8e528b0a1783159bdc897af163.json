{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSE499A\\\\al-khwarizmi\\\\src\\\\components\\\\floor\\\\SortInfoP\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SortInfoP = ({\n  numbers,\n  maxNum,\n  groupA,\n  groupB,\n  groupC,\n  groupD,\n  sortedIndices,\n  pseudo1,\n  title,\n  description,\n  l1,\n  l2,\n  l3,\n  l4,\n  l5,\n  l6,\n  l7,\n  l8,\n  l9,\n  l10,\n  space\n}) => {\n  let classNames = 'SortChartR';\n  let classNamesC = 'SortChartR';\n  let classNamesSW = 'SortChartR';\n  let classNamesSR = 'SortChartR';\n  let classNamesPivot = 'SortChartR';\n  let classNamesMemory = 'SortChartR';\n  numbers.map((num, i) => {\n    let width = 100 / numbers.length;\n    let height = num / maxNum * 100;\n    let stateA = groupA.includes(i);\n    let stateB = groupB.includes(i);\n    let stateC = groupC.includes(i);\n    let stateD = groupD.includes(i);\n    let sorted = sortedIndices.includes(i);\n    if (sorted) classNamesSR += ' Pseudo_sorted';\n    if (stateD) classNamesPivot += ' Bar_stateD';else if (stateC) classNamesMemory += ' Bar_stateC';else if (stateB) {\n      classNamesSW += ' Pseudo_stateB';\n      classNamesSR += 'Bar_default';\n    } else if (stateA) {\n      classNamesC += ' Pseudo_stateA';\n      classNamesSR += 'Bar_default';\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SortInfoP\",\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SortInfo__Body\",\n      children: /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"SortInfo__Article\",\n        children: [description ? description : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You must select an algorithm before you can visualize it's execution on an array of numbers.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: l1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            className: classNamesC,\n            children: \"     \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"code\", {\n            children: l2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            className: classNamesSW\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this), \":\", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: l3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 58\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [/*#__PURE__*/_jsxDEV(\"code\", {\n            className: classNamesSR\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 19\n          }, this), \":\", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: l4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: l5\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n  /*\n    return(\n    \n      <div className=\"SortInfoP\">\n        \n        <div className=\"SortInfo__Body\">\n      <div  > \n      \n     \n            do <br/> \n            <span className={classNames} Style=\"margin-left:20px\">\n            {description}\n              </span><br/>\n        <span id=\"change\" Style=\"margin-left:40px\" >\n       {l1}\n        </span><br/>\n        <span className={classNamesC}  Style=\"margin-left:60px\"><div>\n        efv:{l2}</div>\n        </span>\n        <span className={classNamesSW} Style=\"margin-left:60px\">\n        df:{l3}  </span><br/>\n        <span className={classNamesSR} Style=\"margin-left:10px\">\n        abc:{l4}<br/>\n        </span><br/>\n        <span id=\"change\"> {title ? title : 'while swapped'} </span>\n    \n      </div></div>\n  \n      </div>\n      \n    )\n    */\n\n  /*\n      \n  return(\n    \n    <div className=\"SortChartR\" Style=\"text-align:left\" > \n    <div id=\"screen\" Style=\"margin: 15px\">\n   \n          do <br/> \n          <span className={classNames} Style=\"margin-left:20px\">\n          swapped = false <br/>\n            </span><br/>\n      <span id=\"change\" Style=\"margin-left:40px\" >\n        for i = 1 to indexOfLastUnsortedElement-1<br/>\n      </span><br/>\n      <span className={classNamesC}  Style=\"margin-left:60px\">\n       if leftElement > rightElement<br/>\n      </span><br/>\n      <span className={classNamesSW} Style=\"margin-left:60px\">\n          swap(leftElement, rightElement) <br/> </span><br/>\n      <span className={classNamesSR} Style=\"margin-left:10px\">\n          swapped = true <br/>\n      </span><br/>\n      <span id=\"change\"> {title ? title : 'while swapped'} </span>\n  \n    </div></div>\n    \n  )\n  \n  */\n};\n\n_c = SortInfoP;\nSortInfoP.propTypes = {\n  l1: PropTypes.string,\n  l2: PropTypes.object,\n  l3: PropTypes.object,\n  l4: PropTypes.string,\n  l5: PropTypes.string,\n  l6: PropTypes.string,\n  l7: PropTypes.string,\n  l8: PropTypes.object,\n  l9: PropTypes.object,\n  l10: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.object,\n  worstCase: PropTypes.object,\n  avgCase: PropTypes.object,\n  bestCase: PropTypes.object,\n  space: PropTypes.object,\n  numbers: PropTypes.arrayOf(PropTypes.number),\n  maxNum: PropTypes.number,\n  title: PropTypes.string,\n  groupA: PropTypes.arrayOf(PropTypes.number),\n  groupB: PropTypes.arrayOf(PropTypes.number),\n  groupC: PropTypes.arrayOf(PropTypes.number),\n  groupD: PropTypes.arrayOf(PropTypes.number),\n  sortedIndices: PropTypes.arrayOf(PropTypes.number)\n};\nexport default SortInfoP;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortInfoP\");","map":{"version":3,"sources":["D:/CSE499A/al-khwarizmi/src/components/floor/SortInfoP/index.js"],"names":["React","PropTypes","SortInfoP","numbers","maxNum","groupA","groupB","groupC","groupD","sortedIndices","pseudo1","title","description","l1","l2","l3","l4","l5","l6","l7","l8","l9","l10","space","classNames","classNamesC","classNamesSW","classNamesSR","classNamesPivot","classNamesMemory","map","num","i","width","length","height","stateA","includes","stateB","stateC","stateD","sorted","propTypes","string","object","worstCase","avgCase","bestCase","arrayOf","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\n\nconst SortInfoP = ({\n\n  numbers,\n  maxNum,\n  groupA,\n  groupB,\n  groupC,\n  groupD,\n  sortedIndices,\n  pseudo1,\n  \n\n\n  title,\n  description,\n  l1,\n  l2,\n  l3,\n  l4,\n  l5,\n  l6,\n  l7,\n  l8,\n  l9,\n  l10,\n  space\n}) => {\n\n  let classNames = 'SortChartR';\n  let classNamesC = 'SortChartR';\n  let classNamesSW = 'SortChartR';\n  let classNamesSR = 'SortChartR';\n  let classNamesPivot = 'SortChartR';\n  let classNamesMemory = 'SortChartR';\n   numbers.map((num, i) => {\n    let width = 100 / numbers.length;\n    let height = (num / maxNum) * 100;\n    let stateA = groupA.includes(i);\n    let stateB = groupB.includes(i);\n    let stateC = groupC.includes(i);\n    let stateD = groupD.includes(i);\n    let sorted = sortedIndices.includes(i);\n\n      \n      if (sorted) classNamesSR += ' Pseudo_sorted';\n      \n      if (stateD) classNamesPivot += ' Bar_stateD';\n      else if (stateC) classNamesMemory += ' Bar_stateC';\n      else if (stateB){ classNamesSW += ' Pseudo_stateB';\n      classNamesSR += 'Bar_default';\n    }\n      else if (stateA) {classNamesC += ' Pseudo_stateA';\n      classNamesSR += 'Bar_default';\n    }\n\n    } );\n\n\n\n\n  return (\n    <div className=\"SortInfoP\">\n      <hr />\n      \n      <div className=\"SortInfo__Body\">\n        <article className=\"SortInfo__Article\">\n          {description ? (\n            description\n          ) : (\n            <p>\n              You must select an algorithm before you can visualize it's\n              execution on an array of numbers.\n            </p>\n          )}\n           <td>\n                  {l1}\n                </td>\n                <br/>\n                <td>\n                  <code className={classNamesC}>     </code><code>{l2}</code>\n                </td>\n                <br/>\n                <td>\n                  <code className={classNamesSW}></code>:<code>{l3}</code>\n                  <br/>\n                </td>\n                <br/>\n                <td>\n                  \n                  <code className={classNamesSR}></code>:<code>{l4}</code>\n                </td>\n              \n                <td>\n                  <code>{l5}</code>\n                </td>\n        </article>\n      </div>\n    </div>\n  );\n\n/*\n  return(\n  \n    <div className=\"SortInfoP\">\n      \n      <div className=\"SortInfo__Body\">\n    <div  > \n    \n   \n          do <br/> \n          <span className={classNames} Style=\"margin-left:20px\">\n          {description}\n            </span><br/>\n      <span id=\"change\" Style=\"margin-left:40px\" >\n     {l1}\n      </span><br/>\n      <span className={classNamesC}  Style=\"margin-left:60px\"><div>\n      efv:{l2}</div>\n      </span>\n      <span className={classNamesSW} Style=\"margin-left:60px\">\n      df:{l3}  </span><br/>\n      <span className={classNamesSR} Style=\"margin-left:10px\">\n      abc:{l4}<br/>\n      </span><br/>\n      <span id=\"change\"> {title ? title : 'while swapped'} </span>\n  \n    </div></div>\n\n    </div>\n    \n  )\n  */\n\n\n\n  \n/*\n    \nreturn(\n  \n  <div className=\"SortChartR\" Style=\"text-align:left\" > \n  <div id=\"screen\" Style=\"margin: 15px\">\n \n        do <br/> \n        <span className={classNames} Style=\"margin-left:20px\">\n        swapped = false <br/>\n          </span><br/>\n    <span id=\"change\" Style=\"margin-left:40px\" >\n      for i = 1 to indexOfLastUnsortedElement-1<br/>\n    </span><br/>\n    <span className={classNamesC}  Style=\"margin-left:60px\">\n     if leftElement > rightElement<br/>\n    </span><br/>\n    <span className={classNamesSW} Style=\"margin-left:60px\">\n        swap(leftElement, rightElement) <br/> </span><br/>\n    <span className={classNamesSR} Style=\"margin-left:10px\">\n        swapped = true <br/>\n    </span><br/>\n    <span id=\"change\"> {title ? title : 'while swapped'} </span>\n\n  </div></div>\n  \n)\n\n*/\n\n};\n\nSortInfoP.propTypes = {\n  l1: PropTypes.string,\n  l2: PropTypes.object,\n  l3: PropTypes.object,\n  l4: PropTypes.string,\n  l5: PropTypes.string,\n  l6: PropTypes.string,\n  l7: PropTypes.string,\n  l8: PropTypes.object,\n  l9: PropTypes.object,\n  l10: PropTypes.string,\n  title: PropTypes.string,\n  description: PropTypes.object,\n  worstCase: PropTypes.object,\n  avgCase: PropTypes.object,\n  bestCase: PropTypes.object,\n  space: PropTypes.object,\n  numbers: PropTypes.arrayOf(PropTypes.number),\n  maxNum: PropTypes.number,\n  title:PropTypes.string,\n  groupA: PropTypes.arrayOf(PropTypes.number),\n  groupB: PropTypes.arrayOf(PropTypes.number),\n  groupC: PropTypes.arrayOf(PropTypes.number),\n  groupD: PropTypes.arrayOf(PropTypes.number),\n  sortedIndices: PropTypes.arrayOf(PropTypes.number)\n};\n\nexport default SortInfoP;\n"]},"metadata":{},"sourceType":"module"}