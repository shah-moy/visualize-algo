{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSE499B\\\\visualize-algo\\\\src\\\\components\\\\celling\\\\Button\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport { CSS_CLASSES } from './constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction buildClassNames(rootClass, ClassMappings, userClassName) {\n  let classNames = `${rootClass}`;\n  Object.keys(ClassMappings).forEach(className => {\n    if (ClassMappings[className]) {\n      classNames += ` ${className}`;\n    }\n  });\n  classNames += ` ${userClassName}`;\n  return classNames;\n}\n\nfunction renderIcon(icon, iconClass) {\n  const ICON = icon;\n  return /*#__PURE__*/_jsxDEV(ICON, {\n    className: `${CSS_CLASSES.ICON} ${iconClass}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n}\n\nconst Button = ({\n  className,\n  raised,\n  unelevated,\n  outlined,\n  dense,\n  notCased,\n  disabled,\n  icon,\n  iconClass,\n  href,\n  onClick,\n  children\n}) => {\n  const classNames = buildClassNames(CSS_CLASSES.ROOT, {\n    [CSS_CLASSES.DENSE]: dense,\n    [CSS_CLASSES.RAISED]: raised,\n    [CSS_CLASSES.OUTLINED]: outlined,\n    [CSS_CLASSES.UNELEVATED]: unelevated,\n    [CSS_CLASSES.UPPERCASE]: !notCased\n  }, className);\n\n  if (href) {\n    return /*#__PURE__*/_jsxDEV(\"a\", {\n      href: href,\n      className: classNames,\n      disabled: disabled,\n      children: [icon ? renderIcon(icon, iconClass) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Button__Label\",\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClick,\n    className: classNames,\n    disabled: disabled,\n    children: [icon ? renderIcon(icon, iconClass) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"Button__Label\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nButton.propTypes = {\n  className: PropTypes.string,\n  raised: PropTypes.bool,\n  unelevated: PropTypes.bool,\n  outlined: PropTypes.bool,\n  dense: PropTypes.bool,\n  notCased: PropTypes.bool,\n  disabled: PropTypes.bool,\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n  href: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node])\n};\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["D:/CSE499B/visualize-algo/src/components/celling/Button/index.js"],"names":["React","PropTypes","CSS_CLASSES","buildClassNames","rootClass","ClassMappings","userClassName","classNames","Object","keys","forEach","className","renderIcon","icon","iconClass","ICON","Button","raised","unelevated","outlined","dense","notCased","disabled","href","onClick","children","ROOT","DENSE","RAISED","OUTLINED","UNELEVATED","UPPERCASE","propTypes","string","bool","oneOfType","func","node"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\nimport { CSS_CLASSES } from './constants';\r\n\r\nfunction buildClassNames(rootClass, ClassMappings, userClassName) {\r\n  let classNames = `${rootClass}`;\r\n  Object.keys(ClassMappings).forEach((className) => {\r\n    if (ClassMappings[className]) {\r\n      classNames += ` ${className}`;\r\n    }\r\n  });\r\n  classNames += ` ${userClassName}`;\r\n  return classNames;\r\n}\r\n\r\nfunction renderIcon(icon, iconClass) {\r\n  const ICON = icon;\r\n  return <ICON className={`${CSS_CLASSES.ICON} ${iconClass}`} />;\r\n}\r\n\r\nconst Button = ({\r\n  className,\r\n  raised,\r\n  unelevated,\r\n  outlined,\r\n  dense,\r\n  notCased,\r\n  disabled,\r\n  icon,\r\n  iconClass,\r\n  href,\r\n  onClick,\r\n  children\r\n}) => {\r\n  const classNames = buildClassNames(\r\n    CSS_CLASSES.ROOT,\r\n    {\r\n      [CSS_CLASSES.DENSE]: dense,\r\n      [CSS_CLASSES.RAISED]: raised,\r\n      [CSS_CLASSES.OUTLINED]: outlined,\r\n      [CSS_CLASSES.UNELEVATED]: unelevated,\r\n      [CSS_CLASSES.UPPERCASE]: !notCased\r\n    },\r\n    className\r\n  );\r\n\r\n  if (href) {\r\n    return (\r\n      <a href={href} className={classNames} disabled={disabled}>\r\n        {icon ? renderIcon(icon, iconClass) : null}\r\n        <span className=\"Button__Label\">{children}</span>\r\n      </a>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={classNames}\r\n      disabled={disabled}\r\n    >\r\n      {icon ? renderIcon(icon, iconClass) : null}\r\n      <span className=\"Button__Label\">{children}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  raised: PropTypes.bool,\r\n  unelevated: PropTypes.bool,\r\n  outlined: PropTypes.bool,\r\n  dense: PropTypes.bool,\r\n  notCased: PropTypes.bool,\r\n  disabled: PropTypes.bool,\r\n  icon: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\r\n  href: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  children: PropTypes.oneOfType([PropTypes.func, PropTypes.node])\r\n};\r\n\r\nexport default Button;"]},"metadata":{},"sourceType":"module"}