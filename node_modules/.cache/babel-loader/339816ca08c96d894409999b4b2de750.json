{"ast":null,"code":"var _jsxFileName = \"D:\\\\CSE499A\\\\al-khwarizmi\\\\src\\\\components\\\\SortChart\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './style.css';\nimport Bar from '../Bar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getListOfBars = (numbers, maxNum, groupA, groupB, groupC, groupD, sortedIndices) => {\n  return numbers.map((num, i) => {\n    let width = 100 / numbers.length;\n    let height = num / maxNum * 100;\n    let stateA = groupA.includes(i);\n    let stateB = groupB.includes(i);\n    let stateC = groupC.includes(i);\n    let stateD = groupD.includes(i);\n    let sorted = sortedIndices.includes(i);\n    let margin = i === numbers.length ? '0' : width > 3 ? '0.5rem' : '0.125rem';\n    return /*#__PURE__*/_jsxDEV(Bar, {\n      width: width,\n      height: height,\n      val: width > 4 ? num : null,\n      stateA: stateA,\n      stateB: stateB,\n      stateC: stateC,\n      stateD: stateD,\n      sorted: sorted,\n      style: {\n        marginRight: `${margin}`\n      }\n    }, `${i}_${num}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  });\n};\n\nconst SortChartR = (numbers, maxNum, groupA, groupB, groupC, groupD, sortedIndices, pseudo1, title) => {\n  let classNames = 'SortChartR';\n  let classNamesC = 'SortChartR';\n  let classNamesSW = 'SortChartR';\n  let classNamesSR = 'SortChartR';\n  let classNamesPivot = 'SortChartR';\n  let classNamesMemory = 'SortChartR';\n  numbers.map((num, i) => {\n    let width = 100 / numbers.length;\n    let height = num / maxNum * 100;\n    let stateA = groupA.includes(i);\n    let stateB = groupB.includes(i);\n    let stateC = groupC.includes(i);\n    let stateD = groupD.includes(i);\n    let sorted = sortedIndices.includes(i);\n    if (sorted) classNamesSR += ' Bar_sorted';\n    if (stateD) classNamesPivot += ' Bar_stateD';else if (stateC) classNamesMemory += ' Bar_stateC';else if (stateB) {\n      classNamesSW += ' Bar_stateB';\n      classNamesSR += 'Bar_default';\n    } else if (stateA) {\n      classNamesC += ' Bar_stateA';\n      classNamesSR += 'Bar_default';\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SortChartR\",\n    Style: \"text-align:left\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"screen\",\n      Style: \"margin: 15px\",\n      children: [\"do \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classNames,\n        Style: \"margin-left:20px\",\n        children: [\"swapped = false \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 27\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"change\",\n        Style: \"margin-left:40px\",\n        children: [\"for i = 1 to indexOfLastUnsortedElement-1\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classNamesC,\n        Style: \"margin-left:60px\",\n        children: [\"if leftElement > rightElement\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classNamesSW,\n        Style: \"margin-left:60px\",\n        children: [\"swap(leftElement, rightElement) \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 43\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classNamesSR,\n        Style: \"margin-left:10px\",\n        children: [\"swapped = true \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"change\",\n        children: [\" \", title ? title : 'while swapped', \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_c = SortChartR;\n\nconst SortChart = ({\n  numbers,\n  maxNum,\n  groupA,\n  groupB,\n  groupC,\n  groupD,\n  sortedIndices\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SortChart\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SortChartL\",\n      children: getListOfBars(numbers, maxNum, groupA, groupB, groupC, groupD, sortedIndices)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"SortChartR\",\n      children: SortChartR(numbers, maxNum, groupA, groupB, groupC, groupD, sortedIndices)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = SortChart;\nSortChart.propTypes = {\n  numbers: PropTypes.arrayOf(PropTypes.number),\n  maxNum: PropTypes.number,\n  title: PropTypes.string,\n  groupA: PropTypes.arrayOf(PropTypes.number),\n  groupB: PropTypes.arrayOf(PropTypes.number),\n  groupC: PropTypes.arrayOf(PropTypes.number),\n  groupD: PropTypes.arrayOf(PropTypes.number),\n  sortedIndices: PropTypes.arrayOf(PropTypes.number)\n};\nexport default SortChart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SortChartR\");\n$RefreshReg$(_c2, \"SortChart\");","map":{"version":3,"sources":["D:/CSE499A/al-khwarizmi/src/components/SortChart/index.js"],"names":["React","PropTypes","Bar","getListOfBars","numbers","maxNum","groupA","groupB","groupC","groupD","sortedIndices","map","num","i","width","length","height","stateA","includes","stateB","stateC","stateD","sorted","margin","marginRight","SortChartR","pseudo1","title","classNames","classNamesC","classNamesSW","classNamesSR","classNamesPivot","classNamesMemory","SortChart","propTypes","arrayOf","number","string"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.css';\r\n\r\nimport Bar from '../Bar';\r\n\r\nconst getListOfBars = (\r\n  numbers,\r\n  maxNum,\r\n  groupA,\r\n  groupB,\r\n  groupC,\r\n  groupD,\r\n  sortedIndices\r\n) => {\r\n  return numbers.map((num, i) => {\r\n    let width = 100 / numbers.length;\r\n    let height = (num / maxNum) * 100;\r\n    let stateA = groupA.includes(i);\r\n    let stateB = groupB.includes(i);\r\n    let stateC = groupC.includes(i);\r\n    let stateD = groupD.includes(i);\r\n    let sorted = sortedIndices.includes(i);\r\n\r\n    let margin =\r\n      i === numbers.length ? '0' : width > 3 ? '0.5rem' : '0.125rem';\r\n    return (\r\n      <Bar\r\n        key={`${i}_${num}`}\r\n        width={width}\r\n        height={height}\r\n        val={width > 4 ? num : null}\r\n        stateA={stateA}\r\n        stateB={stateB}\r\n        stateC={stateC}\r\n        stateD={stateD}\r\n        sorted={sorted}\r\n        style={{ marginRight: `${margin}` }}\r\n      />\r\n    );\r\n  });\r\n};\r\n\r\n\r\nconst SortChartR = (\r\n  numbers,\r\n  maxNum,\r\n  groupA,\r\n  groupB,\r\n  groupC,\r\n  groupD,\r\n  sortedIndices,\r\n  pseudo1,\r\n  title\r\n) => {\r\n\r\n  let classNames = 'SortChartR';\r\n  let classNamesC = 'SortChartR';\r\n  let classNamesSW = 'SortChartR';\r\n  let classNamesSR = 'SortChartR';\r\n  let classNamesPivot = 'SortChartR';\r\n  let classNamesMemory = 'SortChartR';\r\n   numbers.map((num, i) => {\r\n    let width = 100 / numbers.length;\r\n    let height = (num / maxNum) * 100;\r\n    let stateA = groupA.includes(i);\r\n    let stateB = groupB.includes(i);\r\n    let stateC = groupC.includes(i);\r\n    let stateD = groupD.includes(i);\r\n    let sorted = sortedIndices.includes(i);\r\n\r\n      \r\n      if (sorted) classNamesSR += ' Bar_sorted';\r\n      \r\n      if (stateD) classNamesPivot += ' Bar_stateD';\r\n      else if (stateC) classNamesMemory += ' Bar_stateC';\r\n      else if (stateB){ classNamesSW += ' Bar_stateB';\r\n      classNamesSR += 'Bar_default';\r\n    }\r\n      else if (stateA) {classNamesC += ' Bar_stateA';\r\n      classNamesSR += 'Bar_default';\r\n    }\r\n\r\n    } );\r\n\r\n\r\n\r\n    \r\nreturn(\r\n  \r\n    <div className=\"SortChartR\" Style=\"text-align:left\" > \r\n    <div id=\"screen\" Style=\"margin: 15px\">\r\n   \r\n          do <br/> \r\n          <span className={classNames} Style=\"margin-left:20px\">\r\n          swapped = false <br/>\r\n            </span><br/>\r\n      <span id=\"change\" Style=\"margin-left:40px\" >\r\n        for i = 1 to indexOfLastUnsortedElement-1<br/>\r\n      </span><br/>\r\n      <span className={classNamesC}  Style=\"margin-left:60px\">\r\n        if leftElement > rightElement<br/>\r\n      </span><br/>\r\n      <span className={classNamesSW} Style=\"margin-left:60px\">\r\n          swap(leftElement, rightElement) <br/> </span><br/>\r\n      <span className={classNamesSR} Style=\"margin-left:10px\">\r\n          swapped = true <br/>\r\n      </span><br/>\r\n      <span id=\"change\"> {title ? title : 'while swapped'} </span>\r\n\r\n    </div></div>\r\n    \r\n)\r\n  \r\n  \r\n};\r\n\r\n\r\n\r\nconst SortChart = ({\r\n  numbers,\r\n  maxNum,\r\n  groupA,\r\n  groupB,\r\n  groupC,\r\n  groupD,\r\n  sortedIndices\r\n}) => {\r\n  return (\r\n    <div className=\"SortChart\">\r\n      <div className='SortChartL'>{getListOfBars(\r\n        numbers,\r\n        maxNum,\r\n        groupA,\r\n        groupB,\r\n        groupC,\r\n        groupD,\r\n        sortedIndices\r\n      )}</div>\r\n       <aside className=\"SortChartR\">{SortChartR(\r\n         numbers,\r\n         maxNum,\r\n         groupA,\r\n         groupB,\r\n         groupC,\r\n         groupD,\r\n         \r\n         sortedIndices,\r\n         \r\n       )}\r\n      \r\n       </aside>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nSortChart.propTypes = {\r\n  numbers: PropTypes.arrayOf(PropTypes.number),\r\n  maxNum: PropTypes.number,\r\n  title:PropTypes.string,\r\n  groupA: PropTypes.arrayOf(PropTypes.number),\r\n  groupB: PropTypes.arrayOf(PropTypes.number),\r\n  groupC: PropTypes.arrayOf(PropTypes.number),\r\n  groupD: PropTypes.arrayOf(PropTypes.number),\r\n  sortedIndices: PropTypes.arrayOf(PropTypes.number)\r\n};\r\n\r\nexport default SortChart;"]},"metadata":{},"sourceType":"module"}